{"version":3,"sources":["../../src/TriggerServices.js"],"names":["TriggerServices","constructor","services","loadServices","getService","name","removeAug","augId","clearAugs","Object","keys","start","close","DebuggerService","e","logger","exception"],"mappings":";;;;;;;AAAA;;AAEA;;AAGe,MAAMA,eAAN,CAAsB;AAEjCC,EAAAA,WAAW,GAAG;AACV,SAAKC,QAAL,GAAgB,EAAhB;AAEA,SAAKC,YAAL;AACH;;AAEDC,EAAAA,UAAU,CAACC,IAAD,EAAO;AACb,WAAO,KAAKH,QAAL,CAAcG,IAAd,CAAP;AACH;;AAEDC,EAAAA,SAAS,CAACC,KAAD,EAAQ;AACb,SAAK,IAAIF,IAAT,IAAiB,KAAKH,QAAtB,EAAgC;AAC5B,WAAKA,QAAL,CAAcG,IAAd,EAAoBC,SAApB,CAA8BC,KAA9B;AACH;AACJ;;AAEDC,EAAAA,SAAS,GAAG;AACR,SAAK,IAAIH,IAAT,IAAiBI,MAAM,CAACC,IAAP,CAAY,KAAKR,QAAjB,CAAjB,EAA6C;AACzC,WAAKA,QAAL,CAAcG,IAAd,EAAoBG,SAApB;AACH;AACJ;;AAEDG,EAAAA,KAAK,GAAG;AACJ,SAAKR,YAAL;AACH;;AAEDS,EAAAA,KAAK,GAAG;AACJ,SAAK,IAAIP,IAAT,IAAiBI,MAAM,CAACC,IAAP,CAAY,KAAKR,QAAjB,CAAjB,EAA6C;AACzC,WAAKA,QAAL,CAAcG,IAAd,EAAoBO,KAApB;AACH;;AAED,SAAKV,QAAL,GAAgB,EAAhB;AACH;;AAEDC,EAAAA,YAAY,GAAG;AACX,QAAI;AACA,WAAKD,QAAL,CAAc,iBAAd,IAAmC,IAAIW,gCAAJ,EAAnC;AACH,KAFD,CAEE,OAAOC,CAAP,EAAU;AACRC,qBAAOC,SAAP,CAAiB,wCAAjB,EAA2DF,CAA3D;AACH,KALU,CAOX;;AACH;;AA5CgC","sourcesContent":["import {DebuggerService} from \"./services/DebuggerService\";\r\n\r\nimport {logger} from \"./logger\";\r\n\r\n\r\nexport default class TriggerServices {\r\n\r\n    constructor() {\r\n        this.services = {};\r\n\r\n        this.loadServices();\r\n    }\r\n\r\n    getService(name) {\r\n        return this.services[name];\r\n    }\r\n\r\n    removeAug(augId) {\r\n        for (let name in this.services) {\r\n            this.services[name].removeAug(augId);\r\n        }\r\n    }\r\n\r\n    clearAugs() {\r\n        for (let name of Object.keys(this.services)) {\r\n            this.services[name].clearAugs();\r\n        }\r\n    }\r\n\r\n    start() {\r\n        this.loadServices();\r\n    }\r\n\r\n    close() {\r\n        for (let name of Object.keys(this.services)) {\r\n            this.services[name].close();\r\n        }\r\n\r\n        this.services = {};\r\n    }\r\n\r\n    loadServices() {\r\n        try {\r\n            this.services['DebuggerService'] = new DebuggerService();\r\n        } catch (e) {\r\n            logger.exception(\"Error starting location based services\", e);\r\n        }\r\n\r\n        // FUTURE - init logging service\r\n    }\r\n\r\n}\r\n"],"file":"TriggerServices.js"}