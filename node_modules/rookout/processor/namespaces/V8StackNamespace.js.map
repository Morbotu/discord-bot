{"version":3,"sources":["../../../../src/processor/namespaces/V8StackNamespace.js"],"names":["DEFAULT_TRACEBACK_LIMIT","DEFAULT_FRAMES_LIMIT","V8StackNamespace","Namespace","constructor","debug","state","readKey","key","FrameNamespace","frame","parseInt","callMethod","name","args","traceback","frames","depth","frameCount","result","i","push","ContainerNamespace","module","filename","line","function","ListNamespace"],"mappings":"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","sourcesContent":["\"use strict\";\r\n\r\nimport FrameNamespace from './V8FrameNamespace';\r\nimport ContainerNamespace from \"./ContainerNamespace\";\r\nimport ListNamespace from \"./ListNamespace\";\r\nimport Namespace from \"./Namespace\";\r\n\r\nexport const DEFAULT_TRACEBACK_LIMIT = 1000;\r\nexport const DEFAULT_FRAMES_LIMIT = 100;\r\n\r\nexport default class V8StackNamespace extends Namespace{\r\n\r\n    constructor(debug, state) {\r\n        super();\r\n\r\n        this.debug = debug;\r\n        this.state = state;\r\n    }\r\n\r\n    readKey(key) {\r\n        return new FrameNamespace(this.debug, this.state.frame(parseInt(key)));\r\n    }\r\n\r\n    callMethod(name, args) {\r\n        switch (name) {\r\n            case \"traceback\":\r\n                return this.traceback(args);\r\n            case \"frames\":\r\n                return this.frames(args);\r\n            default:\r\n                return super.callMethod(name, args);\r\n        }\r\n    }\r\n\r\n    traceback(args) {\r\n        // Decide on dump depth\r\n        let depth = DEFAULT_TRACEBACK_LIMIT;\r\n        if (null != args && '' !== args) {\r\n            depth = parseInt(args);\r\n        }\r\n        if (depth > this.state.frameCount()) {\r\n            depth = this.state.frameCount();\r\n        }\r\n\r\n        let result = [];\r\n        for (let i = 0; i < depth; ++i) {\r\n            let frame = new FrameNamespace(this.debug, this.state.frame(i));\r\n\r\n            result.push(new ContainerNamespace({\r\n                module: frame.module(),\r\n                filename: frame.filename(),\r\n                line: frame.line(),\r\n                function: frame.function()\r\n            }));\r\n        }\r\n\r\n        return new ListNamespace(result);\r\n    }\r\n\r\n    frames(args) {\r\n        // Decide on dump depth\r\n        let depth = DEFAULT_FRAMES_LIMIT;\r\n        if (null != args && '' !== args) {\r\n            depth = parseInt(args);\r\n        }\r\n        if (depth > this.state.frameCount()) {\r\n            depth = this.state.frameCount();\r\n        }\r\n\r\n        let result = [];\r\n        for (let i = 0; i < depth; ++i) {\r\n            let frame = new FrameNamespace(this.debug, this.state.frame(i));\r\n\r\n            result.push(frame.callMethod('dump'));\r\n        }\r\n\r\n        return new ListNamespace(result);\r\n    }\r\n\r\n}\r\n"],"file":"V8StackNamespace.js"}