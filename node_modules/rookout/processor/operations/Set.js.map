{"version":3,"sources":["../../../../src/processor/operations/Set.js"],"names":["Set_","constructor","configuration","factory","paths","undefined","RookAugInvalidKey","key","Object","keys","destPath","srcPath","getPath","e","logger","exception","push","execute","namespace","userWarnings","command","value","readFrom","JSObjectNamespace","isDefaultDumpConfig","dumpConfig","tailorDumpConfig","obj","writeTo","msg","sendWarning","RookError"],"mappings":"AAAA;;;;;;;AAEA;;AAEA;;AACA;;AACA;;;;AAGe,MAAMA,IAAN,CAAW;AAEtBC,EAAAA,WAAW,CAACC,aAAD,EAAgBC,OAAhB,EAAyB;AAChC,SAAKC,KAAL,GAAa,EAAb;AAEA,UAAMA,KAAK,GAAGF,aAAa,CAAC,OAAD,CAA3B;;AACA,QAAIE,KAAK,KAAKC,SAAd,EAAyB;AACrB,YAAM,IAAIC,6BAAJ,CAAsB,OAAtB,EAA+BJ,aAA/B,CAAN;AACH;;AAED,SAAK,IAAIK,GAAT,IAAgBC,MAAM,CAACC,IAAP,CAAYL,KAAZ,CAAhB,EAAoC;AAChC,UAAIM,QAAQ,GAAG,EAAf;AACA,UAAIC,OAAO,GAAG,EAAd;;AAEA,UAAI;AACAD,QAAAA,QAAQ,GAAGP,OAAO,CAACS,OAAR,CAAgBL,GAAhB,CAAX;AACAI,QAAAA,OAAO,GAAGR,OAAO,CAACS,OAAR,CAAgBR,KAAK,CAACG,GAAD,CAArB,CAAV;AACH,OAHD,CAGE,OAAOM,CAAP,EAAU;AACR;AACAC,uBAAOC,SAAP,CAAiB,sCAAjB,EAAyDF,CAAzD;AACH;;AAED,WAAKT,KAAL,CAAWY,IAAX,CAAgB,CAACN,QAAD,EAAWC,OAAX,CAAhB;AACH;AACJ;;AAEDM,EAAAA,OAAO,CAACC,SAAD,EAAYC,YAAZ,EAA0B;AAC7B,SAAK,IAAIC,OAAT,IAAoB,KAAKhB,KAAzB,EAAgC;AAC5B,UAAI;AACA,YAAIiB,KAAK,GAAGD,OAAO,CAAC,CAAD,CAAP,CAAWE,QAAX,CAAoBJ,SAApB,CAAZ;;AACA,YAAIG,KAAK,YAAYE,0BAAjB,IAAsCF,KAAK,CAACG,mBAAN,EAA1C,EAAuE;AACnEH,UAAAA,KAAK,CAACI,UAAN,GAAmBF,2BAAkBG,gBAAlB,CAAmCL,KAAK,CAACM,GAAzC,CAAnB;AACH;;AAEDP,QAAAA,OAAO,CAAC,CAAD,CAAP,CAAWQ,OAAX,CAAmBV,SAAnB,EAA8BG,KAA9B;AACH,OAPD,CAOE,OAAOR,CAAP,EAAU;AACR,YAAIgB,GAAG,GAAG,yCAAV;;AACAf,uBAAOC,SAAP,CAAiBc,GAAjB,EAAsBhB,CAAtB;;AAEA,YAAIM,YAAY,IAAI,IAApB,EAAyB;AACrBA,UAAAA,YAAY,CAACW,WAAb,CAAyB,IAAIC,kBAAJ,CAAclB,CAAd,EAAiBgB,GAAjB,CAAzB;AACH;AACJ;AACJ;AACJ;;AA5CqB","sourcesContent":["\"use strict\";\n\nimport JSObjectNamespace from \"../namespaces/JSObjectNamespace\";\n\nimport {logger} from \"../../logger\";\nimport RookError from \"../RookError\";\nimport { RookAugInvalidKey } from '../../exceptions'\n\n\nexport default class Set_ {\n\n    constructor(configuration, factory) {\n        this.paths = [];\n\n        const paths = configuration['paths'];\n        if (paths === undefined) {\n            throw new RookAugInvalidKey('paths', configuration);\n        }\n\n        for (let key of Object.keys(paths)) {\n            let destPath = \"\";\n            let srcPath = \"\";\n\n            try {\n                destPath = factory.getPath(key);\n                srcPath = factory.getPath(paths[key]);\n            } catch (e) {\n                // NOTE: we do not report warnings as there are no clean thread local storage implementations for Node\n                logger.exception(\"Failed to load dest:source path pair\", e);\n            }\n\n            this.paths.push([destPath, srcPath]);\n        }\n    }\n\n    execute(namespace, userWarnings) {\n        for (let command of this.paths) {\n            try {\n                let value = command[1].readFrom(namespace);\n                if (value instanceof JSObjectNamespace && value.isDefaultDumpConfig()) {\n                    value.dumpConfig = JSObjectNamespace.tailorDumpConfig(value.obj);\n                }\n\n                command[0].writeTo(namespace, value);\n            } catch (e) {\n                var msg = \"Failed to execute dest:source path pair\";\n                logger.exception(msg, e);\n\n                if (userWarnings != null){\n                    userWarnings.sendWarning(new RookError(e, msg));\n                }\n            }\n        }\n    }\n\n}\n"],"file":"Set.js"}