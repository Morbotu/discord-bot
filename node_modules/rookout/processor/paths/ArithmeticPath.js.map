{"version":3,"sources":["../../../../src/processor/paths/ArithmeticPath.js"],"names":["exceptions","require","maps","ops","Map","level1","level2","level3","level4","level5","allLevels","Marker","FunctionOperation","constructor","funcName","funcArgs","read","namespace","create","callMethod","write","value","AttributeOperation","name","RookAttributeNotFound","readAttribute","e","writeAttribute","ContainerNamespace","LookupOperation","length","substring","Number","readKey","ToolException_","exc","obj","toString","NamespaceResult","text","undefined","rawString","get_obj","NonPrimitiveNamespaceResult","path","Text","str","TextResult","Array_","list","FloatNumber","number","parseFloat","Number_","parseInt","Char","chr","Bool","bool","Null","Undefined","_opMap","a","b","Opt","opt","level","optUpperCase","toUpperCase","key","found","innerValue","RookInvalidArithmeticPath","executeOperation","result","get","Boolean","RookNonPrimitiveObjectType","isInteger","Array","InspectorObjectNamespace","subtype","loadProperties","prop","properties","val","actions","is_primitive","input","substr","start","end","JSObjectNamespace","isArray","item","includes","itr","String","TreeFlatter","flattedTree","run","currentElement","push","elements","operations","make_lookup_operation","make_function_operation","functionName","args","make_function_operation_access","make_attribute_operation","make_attribute","make_and_execute_namespace_operation","nn","op","make_comp_exp_ex","make_comp_exp","flatElements","shouldStop","i","currentOpt","splice","make_opt","make_apostrophe_string","make_string","make_list","flatter","make_float","split","join","make_number","make_char","make_bool","make_null","make_undefined","ArithmeticPath","configuration","negation","string","startsWith","endsWith","expression","readFrom","rootNamespace","context","parse","normalizeResult","ToolException","writeTo","size","newArr","el","res"],"mappings":"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","sourcesContent":["import JSObjectNamespace from \"../namespaces/JSObjectNamespace\";\nconst exceptions = require('../../exceptions');\nimport {\n    ToolException, RookAttributeNotFound,\n    RookNonPrimitiveObjectType,\n    RookOperationReadOnly\n} from '../../exceptions'\nimport ContainerNamespace from '../namespaces/ContainerNamespace'\nimport InspectorObjectNamespace from '../namespaces/InspectorObjectNamespace'\n\n/*\nCanopy is used to build and evaluate a tree of operations.\na .peg file (Rookout/canopy/ArithmeticPath.peg) is compiled into the various rooks languages.\nCanopy is a PEG parser compiler - and i extend its goal to actually evaluate our arithmetic paths.\n */\n\nconst maps = require('./ArithmeticPathInternal');\n\nconst ops = new Map([   [ \"NE\",  \"!=\"],\n                        [\"=\", \"==\"],\n                        [\"EQ\", \"==\"],\n                        [\"LT\", \"<\"],\n                        [\"GT\", \">\"],\n                        [\"GE\", \">=\"],\n                        [\"LE\", \"<=\"],\n                        [\"AND\", \"&&\"],\n                        [\"OR\", \"||\"]]);\n\nconst level1 = [\"*\" , \"/\"];\nconst level2 = [\"+\" , \"-\"];\nconst level3 = [\"<=\" , \">=\" , \"!=\" , \"=\" , \"==\" ,\n    \">\" , \"<\" ,\n    \"LT\" , \"GT\" , \"LE\" , \"GE\" , \"EQ\" , \"NE\" ,\n    \"lt\" , \"gt\" , \"le\" , \"ge\" , \"eq\" , \"ne\"];\nconst level4 = [\"in\" , \"IN\"];\nconst level5 = [\"or\" , \"OR\" , \"||\" , \"and\" , \"AND\" , \"&&\"];\n\nconst allLevels = [level1, level2, level3, level4, level5];\n\nclass Marker {\n\n}\n\nclass FunctionOperation extends Marker {\n\n    constructor(funcName, funcArgs) {\n        super();\n        this.funcName = funcName;\n        this.funcArgs = funcArgs;\n    }\n\n    read(namespace, create) {\n        return namespace.callMethod(this.funcName, this.funcArgs)\n    }\n\n    write(namespace, value) {\n        throw RookOperationReadOnly(\"FunctionOperation\")\n    }\n}\n\nclass AttributeOperation extends Marker {\n\n    constructor(name) {\n        super();\n        this.name = name;\n    }\n\n    read(namespace, create) {\n        if (namespace === null){\n            throw new RookAttributeNotFound(this.name);\n        }\n\n        try {\n            return namespace.readAttribute(this.name)\n        } catch (e) {\n            if (create && e instanceof RookAttributeNotFound) {\n                namespace.writeAttribute(this.name, new ContainerNamespace({}));\n                return namespace.readAttribute(this.name)\n            } else {\n                throw e;\n            }\n        }\n    }\n\n    write(namespace, value){\n        return namespace.writeAttribute(this.name, value)\n    }\n}\n\nclass LookupOperation extends Marker {\n\n    constructor(name) {\n        super();\n        if (name.length > 1 && name[0] === \"'\" && name[name.length - 1] === \"'\") {\n            this.name = name.substring(1, name.length - 1)\n        } else if (name.length > 1 && name[0] === '\"' && name[name.length - 1] === '\"') {\n            this.name = name.substring(1, name.length - 1)\n        } else {\n            this.name = Number(name)\n        }\n    }\n\n    read(namespace, create) {\n        return namespace.readKey(this.name)\n    }\n\n    write(namespace, value) {\n        throw RookOperationReadOnly(\"LookupOperation\")\n    }\n}\n\nclass ToolException_ extends Marker {\n    constructor(exc) {\n        super();\n\n        this.obj = exc;\n    }\n\n    toString() {\n        return this.obj.toString();\n    }\n}\n\nclass NamespaceResult extends Marker {\n    constructor(namespace) {\n        super();\n\n        this.obj = namespace;\n\n        this.text = 'true';\n        if (this.obj.obj !== undefined) {\n            if (typeof this.obj.obj === \"string\") {\n                this.text = \"'\" + this.obj.obj.toString() + \"'\";\n            } else {\n                if (this.obj.obj !== null) {\n                    this.text = this.obj.obj.toString();\n                } else {\n                    this.text = \"'null'\";\n                }\n            }\n        } else {\n            this.text = \"'undefined'\";\n        }\n    }\n\n    toString() {\n        //assuming its JavaObjectNamespace\n        return this.text;\n    }\n\n    rawString(){\n        if (this.obj.obj === undefined) {\n            return \"'undefined'\";\n        }\n        if (this.obj.obj === null) {\n            return \"'null'\";\n        }\n        return this.obj.obj.toString();\n    }\n\n    get_obj(){\n        return this.obj.obj;\n    }\n}\n\nclass NonPrimitiveNamespaceResult extends NamespaceResult {\n    constructor(namespace, path) {\n        super(namespace);\n\n        this.path = path;\n    }\n\n    toString() {\n        return 'NonPrimitiveNamespaceResult';\n    }\n}\n\nclass Text extends Marker {\n    constructor(str) {\n        super();\n        this.obj = str;\n        this.text = str;\n    }\n\n    toString() {\n        return this.obj;\n    }\n\n    get_obj(){\n        return this.obj;\n    }\n}\n\nclass TextResult extends Marker {\n    constructor(str) {\n        super();\n        this.obj = str;\n        this.text = str;\n    }\n\n    toString() {\n        return this.text;\n    }\n\n    get_obj(){\n        return this.obj;\n    }\n}\n\nclass Array_ extends Marker {\n    constructor(list, str) {\n        super();\n        this.obj = list;\n        this.text = str;\n    }\n\n    toString() {\n        return this.text;\n    }\n\n    get_obj(){\n        return this.obj;\n    }\n}\n\nclass FloatNumber extends Marker {\n    constructor(number) {\n        super();\n        this.obj = parseFloat(number);\n        this.text = number;\n    }\n\n    toString() {\n        return this.obj.toString();\n    }\n\n    get_obj(){\n        return this.obj;\n    }\n}\n\nclass Number_ extends Marker {\n    constructor(number) {\n        super();\n        this.obj = parseInt(number, 10);\n        this.text = number;\n    }\n\n    toString() {\n        return this.obj.toString();\n    }\n\n    get_obj(){\n        return this.obj;\n    }\n}\n\nclass Char extends Marker {\n    constructor(chr) {\n        super();\n        this.obj = chr;\n        this.text = \"'\" + chr + \"'\";\n    }\n\n    toString() {\n        return this.obj;\n    }\n\n    get_obj(){\n        return this.obj;\n    }\n}\n\nclass Bool extends Marker {\n    constructor(bool) {\n        super();\n        this.obj = (bool === 'true') || (bool === 'True') || (bool === true);\n        this.text = bool;\n    }\n\n    toString() {\n        return this.obj.toString();\n    }\n\n    get_obj(){\n        return this.obj;\n    }\n}\n\nclass Null extends Marker {\n    constructor() {\n        super();\n        this.obj = null;\n        this.text = 'null';\n    }\n\n    toString() {\n        return this.text;\n    }\n\n    get_obj(){\n        return this.obj;\n    }\n}\n\nclass Undefined extends Marker {\n    constructor() {\n        super();\n        this.obj = undefined;\n        this.text = 'undefined';\n    }\n\n    toString() {\n        return this.text;\n    }\n\n    get_obj(){\n        return this.obj;\n    }\n}\n\nconst _opMap = new Map([\n    [ \"+\", function(a, b) { return a + b; }],\n    [\"-\", function(a, b) { return a - b; }],\n    [\"/\", function(a, b) { return a / b; }],\n    [\"*\", function(a, b) { return a * b; }],\n\n    [\"<\", function(a, b) { return a < b; }],\n    [\"<=\", function(a, b) { return a <= b; }],\n    [\">\", function(a, b) { return a > b; }],\n    [\">=\", function(a, b) { return a >= b; }],\n    [\"!=\", function(a, b) { return a !== b; }],\n    [\"!==\", function(a, b) { return a !== b; }],\n    [\"=\", function(a, b) { return a === b; }],\n    [\"==\", function(a, b) { return a === b; }],\n    [\"===\", function(a, b) { return a === b; }],\n    //\"in\": function(a, b) { return a in b; },lambda a, b: a in b,  # should use this...\n    [\"&&\", function(a, b) { return a && b; }],\n    [\"||\", function(a, b) { return a || b; }]]);\n\nclass Opt extends Marker {\n    constructor (opt) {\n        super();\n        this.opt = opt;\n        this.level = null;\n\n        let optUpperCase = opt.toUpperCase();\n\n        for (let [key, value] of ops) {\n            if (key === optUpperCase) {\n                this.opt = value;\n                break;\n            }\n        }\n\n        let level = 0;\n        let found = false;\n        for (let value of allLevels) {\n            for (let innerValue of value) {\n                if (opt === innerValue) {\n                    this.level = level;\n                    found = true;\n                    break;\n                }\n            }\n            if (found) {\n                break;\n            }\n            level += 1;\n        }\n\n        if (!found) {\n            throw new exceptions.RookInvalidArithmeticPath(\"Condition could not be resolved: \" + opt);\n        }\n    }\n\n    executeOperation (a, b) {\n        switch (this.level) {\n            case 0:\n            case 1:\n            case 2:\n            case 4:\n                let result = _opMap.get(this.opt)(a.get_obj(), b.get_obj());\n                if (result.constructor === Boolean) {\n                    if (result === false) {\n                        if (a instanceof NonPrimitiveNamespaceResult) {\n                            if (!(b instanceof Undefined) && !(b instanceof Null)) {\n                                return new ToolException_(new RookNonPrimitiveObjectType(a.path));\n                            }\n                        }\n                        if (b instanceof NonPrimitiveNamespaceResult) {\n                            if (!(a instanceof Undefined) && !(a instanceof Null)) {\n                                return new ToolException_(new RookNonPrimitiveObjectType(b.path));\n                            }\n                        }\n                    }\n                    return new Bool(result);\n                }\n\n                if (result instanceof Bool) {\n                    return new Bool(result);\n                }\n\n                if (Number.isInteger(result)) {\n                    return new Number_(result);\n                }\n\n                return new TextResult(result);\n            case 3:\n                if (b instanceof NonPrimitiveNamespaceResult) {\n                    return new ToolException_(new RookNonPrimitiveObjectType(b.path));\n                }\n\n                if ((!b instanceof Array) && (!b instanceof NamespaceResult) && (!b instanceof Text)) {\n                    return new Bool(false);\n                }\n\n                if (b.obj instanceof InspectorObjectNamespace) {\n                    if (b.obj.obj.subtype === 'array') {\n                        // loadProperties only if need to inspect the internal\n                        b.obj.loadProperties();\n\n                        for (let prop of b.obj.properties) {\n                            if (prop.name === 'length' || prop.name === '__proto__') {\n                                continue;\n                            } else {\n                                let val = prop.value.value;\n                                if (!actions.is_primitive(val)) {\n                                    return new NonPrimitiveNamespaceResult(b.obj, input.substr(start, end));\n                                }\n\n                                if (val.toString() === a.text) {\n                                    return new Bool(true);\n                                }\n                            }\n                        }\n                    } else {\n                        return new NonPrimitiveNamespaceResult(result, input.substr(start, end));\n                    }\n                } else if (b.obj instanceof JSObjectNamespace) {\n                    if (Array.isArray(b.obj.obj)) {\n                        for (let item of b.obj.obj) {\n                            if (item === a.obj) {\n                                return new Bool(true);\n                            }\n                        }\n                    }\n\n                    if (typeof b.obj.obj === 'string') {\n                        if (a instanceof Text) {\n                            return b.obj.obj.includes(a.obj) ? new Bool(true) : new Bool(false);\n                        } else {\n                            return b.obj.obj.includes(a.obj.obj) ? new Bool(true) : new Bool(false);\n                        }\n                    }\n\n                    return new Bool(false);\n                } else {\n                    if (b instanceof Array_) {\n                        for (let itr of b.obj) {\n                            if (itr.text === a.text && itr.obj === a.obj) {\n                                return new Bool(true);\n                            }\n                        }\n                    } else {\n                        if (b instanceof Text) {\n                            if (a.obj.constructor === String) {\n                                if (b.text.includes(a.text)) {\n                                    return new Bool(true);\n                                }\n                            }\n                        } else {\n                            if (b instanceof NamespaceResult) {\n                                if (a.obj.constructor === String) {\n                                    if (b.rawString().includes(a.text)) {\n                                        return new Bool(true);\n                                    }\n                                } else {\n                                    if (a instanceof NamespaceResult) {\n                                        if (b.rawString().includes(a.rawString())) {\n                                            return new Bool(true);\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n\n                return new Bool(false);\n        }\n    }\n}\n\nclass TreeFlatter {\n    constructor() {\n        this.flattedTree = [];\n    }\n\n    run(currentElement) {\n        if (currentElement instanceof Marker) {\n            this.flattedTree.push(currentElement);\n        }\n\n        for (let e of currentElement.elements) {\n            if (e instanceof Marker) {\n                this.flattedTree.push(e);\n            } else {\n                this.run(e);\n            }\n        }\n\n        return this.flattedTree;\n    }\n}\n\nclass actions {\n\n    constructor(namespace) {\n        this.namespace = null;\n        this.operations = [];\n        this.namespace = namespace;\n    }\n\n    make_lookup_operation(input, start, end, elements) {\n        return new LookupOperation(input.substring(start + 1, end - 1));\n    }\n\n    make_function_operation(input, start, end, elements) {\n        // To build the function name, we will merge the unicode_set and all the unicode_set_with_numbers\n        // To build the args we will simply read the atom at index 3\n        // which can be result of another operation; thus checking for exception\n        // For further explanation, check ArithmeticPath.peg\n\n        let functionName = elements[0].text + elements[1].text;\n\n        if (elements[3] instanceof ToolException_) {\n            throw elements[3];\n        }\n\n        let args = elements[3].text;\n        return new FunctionOperation(functionName, args);\n    }\n\n    make_function_operation_access(input, start, end, elements) {\n        // To build the function name, we will merge the unicode_set and all the unicode_set_with_numbers\n        // To build the args we will simply read the atom at index 4\n        // which can be result of another operation; thus checking for exception\n        // For further explanation, check ArithmeticPath.peg\n\n        let functionName = elements[1].text + elements[2].text;\n\n        if (elements[4] instanceof ToolException_) {\n            throw elements[4];\n        }\n\n        let args = elements[4].text;\n        return new FunctionOperation(functionName, args);\n    }\n\n    make_attribute_operation(input, start, end, elements) {\n        return new AttributeOperation(input.substring(start + 1, end));\n    }\n\n    make_attribute(input, start, end, elements) {\n        return new AttributeOperation(input.substring(start, end));\n    }\n\n    static is_primitive(obj) {\n        return !(obj !== undefined && obj !== null && obj.constructor !== Number\n            && obj.constructor !== String && obj.constructor !== Boolean)\n    }\n\n    make_and_execute_namespace_operation(input, start, end, elements) {\n        // Element 1 will not be null\n        // Element 2 is a list of another elements (can be empty)\n        // element1.(element2.element3.element4)\n        // For further explanation, check ArithmeticPath.peg\n\n        try {\n            this.operations = [];\n            this.operations.push(elements[1]);\n            for (let nn of elements[2].elements) {\n                this.operations.push(nn);\n            }\n\n            // Check if we have some exceptions in the operations chain - might happen if function parsing failed.\n            for (let op of this.operations) {\n                if (op instanceof ToolException_) {\n                    return op;\n                }\n            }\n\n            let result = elements[1].read(this.namespace, false);\n            for (let nn of elements[2].elements) {\n                result = nn.read(result, false);\n            }\n\n            if (!actions.is_primitive(result.obj) && !(Array.isArray(result.obj))) {\n                return new NonPrimitiveNamespaceResult(result, input.substr(start, end));\n            }\n\n            return new NamespaceResult(result);\n        } catch (e) {\n            return new ToolException_(e);\n        }\n    }\n\n    make_comp_exp_ex(input, start, end, elements) {\n        // Element 2 is the actual expression\n        // For further explanation, check ArithmeticPath.peg\n        return elements[2];\n    }\n\n    make_comp_exp(input, start, end, elements) {\n        // We can assume the following: atom ( opt_ atom )*\n        // the first (which must be) will be simple atom\n        // the second and so forth will always be pair <Opt, Atom>\n        // Its important to remember that this execution will handle the inner brackets if exist\n        // In order to handle priority (which i could not figure out if available with canopy library):\n        // 1. lets make the tree flat\n        // 2. handle priority ourselves - (atom opt1 atom) will be handled before (atom opt2 atom) and will return TreeNode with result\n        // For further explanation, check ArithmeticPath.peg\n\n        // handle case the size is 1\n        if (elements[1].elements.length === 0) {\n            return elements[0];\n        }\n\n        let flatElements = [];\n        flatElements.push(elements[0]);\n        for (let nn of elements[1].elements) {\n            flatElements.push(nn.elements[0]);\n            flatElements.push(nn.elements[1]);\n        }\n\n        while (flatElements.length > 1) {\n            let shouldStop = false;\n            for (let level = 0; level < allLevels.length && !shouldStop; level++) {\n                for (let i = 1; i < flatElements.length; i += 2) {\n                    let currentOpt = flatElements[i];\n                    if (currentOpt.level === level) {\n                        let result = currentOpt.executeOperation(flatElements[i - 1], flatElements[i + 1]);\n                        flatElements.splice(i - 1, 3);\n                        flatElements.splice(i - 1, 0, result);\n\n                        shouldStop = true;\n                        break;\n                    }\n                }\n            }\n        }\n        return flatElements[0];\n    }\n\n    make_opt(input, start, end, elements) {\n        return new Opt(elements[1].text);\n    }\n\n    make_apostrophe_string(input, start, end, elements) {\n        return new Text(elements[2].text);\n    }\n\n    make_string(input, start, end, elements) {\n        return new Text(elements[2].text);\n    }\n\n    make_list(input, start, end, elements) {\n        let flatter = new TreeFlatter();\n        let result = flatter.run(elements[3]);\n        return new Array_(result, input.substr(start, end));\n    }\n\n    make_float(input, start, end, elements) {\n        return new FloatNumber(input.substring(start, end).split(\" \").join(\"\"));\n    }\n\n    make_number(input, start, end, elements) {\n        return new Number_(input.substring(start, end).split(\" \").join(\"\"));\n    }\n\n    make_char(input, start, end, elements) {\n        return new Char(input.substring(start, end).split(\" \").join(\"\"));\n    }\n\n    make_bool(input, start, end, elements) {\n        return new Bool(input.substring(start, end).split(\" \").join(\"\"));\n    }\n\n    make_null(input, start, end, elements) {\n      return new Null();\n    }\n\n    make_undefined(input, start, end, elements) {\n        return new Undefined();\n    }\n}\n\nexport default class ArithmeticPath {\n    constructor(configuration) {\n        this.negation = false;\n        let string = null;\n        if (typeof configuration === \"string\") {\n            string = configuration;\n        } else {\n            string = configuration['path'];\n        }\n\n        if (string.startsWith(\"NOT(\") && string.endsWith(\")\")) {\n            string = string.substring(\"NOT(\".length, string.length - 1);\n            this.negation = true;\n        }\n\n        if (string === \"\") {\n            throw new exceptions.RookInvalidArithmeticPath(string, null);\n        }\n\n        this.expression = string;\n    }\n\n    readFrom(rootNamespace) {\n        let context = new actions(rootNamespace);\n        try {\n            let result = maps.parse(this.expression, {actions: context});\n            return this.normalizeResult(result);\n        } catch (e) {\n            if (e instanceof ToolException_) {\n                throw e.obj;\n            }\n            if (e instanceof ToolException) {\n                throw e;\n            }\n            throw new exceptions.RookInvalidArithmeticPath(this.expression, e);\n        }\n    }\n\n    writeTo(rootNamespace, value) {\n        let context = new actions(rootNamespace);\n        try {\n            // initialize operations chain - by parsing the expression - ignore return value\n            maps.parse(this.expression, {actions: context});\n        } catch (e) {\n            throw new exceptions.RookInvalidArithmeticPath(this.expression, e);\n        }\n\n        // execute the operation chain.\n        let size = context.operations.length;\n        if (size === 0) {\n            throw new exceptions.RookInvalidArithmeticPath(this.expression, null);\n        }\n\n        let i = 0;\n        let namespace = rootNamespace;\n        for (; i < size - 1; i++) {\n            namespace = context.operations[i].read(namespace, true);\n        }\n\n        context.operations[i].write(namespace, value);\n    }\n\n    normalizeResult(result) {\n        if (result instanceof Array_) {\n            let newArr = [];\n            for (let el of result.obj) {\n                newArr.push(el.obj);\n            }\n\n            return new JSObjectNamespace(newArr);\n        }\n\n        if (result instanceof NamespaceResult) {\n            return result.obj;\n        }\n\n        if (result instanceof ToolException_) {\n            throw result.obj;\n        }\n\n        if (result instanceof NonPrimitiveNamespaceResult) {\n            return result.obj;\n        }\n\n        let res = result.obj;\n        if (typeof res === 'boolean' && this.negation) {\n            res = !res;\n        }\n\n        return new JSObjectNamespace(res);\n    }\n}\n"],"file":"ArithmeticPath.js"}