{"version":3,"sources":["../../../src/augs/AugFactory.js"],"names":["config","require","AugFactory","constructor","output","processorFactory","ProcessorFactory","getAug","configuration","augId","String","RookAugInvalidKey","jsonLocation","location","getLocation","jsonAction","action","ActionRunProcessor","condition","conditionConfiguration","Condition","maxAugTime","InstrumentationConfig","MAX_AUG_TIME","limitsSpec","limits","undefined","includes","limitMatches","match","length","push","Aug","name","LocationFileLine","RookUnsupportedLocation"],"mappings":"AAAA;;;;;;;AAEA;;AACA;;AACA;;AACA;;AACA;;AAGA;;;;AAFA,MAAMA,MAAM,GAAGC,OAAO,CAAC,WAAD,CAAtB;;AAIe,MAAMC,UAAN,CAAiB;AAE5BC,EAAAA,WAAW,CAACC,MAAD,EAAS;AAChB,SAAKA,MAAL,GAAcA,MAAd;AAEA,SAAKC,gBAAL,GAAwB,IAAIC,yBAAJ,EAAxB;AACH;;AAEDC,EAAAA,MAAM,CAACC,aAAD,EAAgB;AAClB,UAAMC,KAAK,GAAGD,aAAa,CAAC,IAAD,CAA3B;;AAEA,QAAI,EAAE,OAAOC,KAAP,KAAiB,QAAjB,IAA6BA,KAAK,YAAYC,MAAhD,CAAJ,EAA6D;AACzD,YAAM,IAAIC,6BAAJ,CAAsB,IAAtB,EAA4BH,aAA5B,CAAN;AACH;;AAED,UAAMI,YAAY,GAAGJ,aAAa,CAAC,UAAD,CAAlC;;AAEA,QAAI,QAAQI,YAAZ,EAA0B;AACtB,YAAM,IAAID,6BAAJ,CAAsB,UAAtB,EAAkCH,aAAlC,CAAN;AACH;;AAED,UAAMK,QAAQ,GAAG,KAAKC,WAAL,CAAiBF,YAAjB,CAAjB;AAEA,UAAMG,UAAU,GAAGP,aAAa,CAAC,QAAD,CAAhC;;AAEA,QAAI,QAAQO,UAAZ,EAAwB;AACpB,YAAM,IAAIJ,6BAAJ,CAAsB,QAAtB,EAAgCH,aAAhC,CAAN;AACH;;AAED,UAAMQ,MAAM,GAAG,IAAIC,2BAAJ,CAAuBF,UAAvB,EAAmC,KAAKV,gBAAxC,CAAf;AAEA,QAAIa,SAAJ;AAEA,UAAMC,sBAAsB,GAAGX,aAAa,CAAC,aAAD,CAA5C;;AAEA,QAAI,QAAQW,sBAAZ,EAAoC;AAChCD,MAAAA,SAAS,GAAG,IAAIE,kBAAJ,CAAcD,sBAAd,CAAZ;AACH;;AAED,UAAME,UAAU,GAAGb,aAAa,CAACa,UAAd,KAA6B,CAA7B,GAAiC,CAAjC,GACfb,aAAa,CAACa,UAAd,IACArB,MAAM,CAACsB,qBAAP,CAA6BC,YAFjC;AAIA,QAAIC,UAAU,GAAGhB,aAAa,CAAC,WAAD,CAA9B;AACA,QAAIiB,MAAM,GAAG,EAAb;;AAEA,QAAID,UAAU,KAAKE,SAAf,IAA4BF,UAAU,CAACG,QAAX,CAAoB,GAApB,CAAhC,EAA0D;AACtD,UAAIC,YAAY,GAAGJ,UAAU,CAACK,KAAX,CAAiB,gBAAjB,CAAnB;;AAEA,UAAID,YAAY,KAAK,IAArB,EAA2B;AACvBH,QAAAA,MAAM,GAAG,CAACG,YAAY,CAAC,CAAD,CAAb,EAAkBA,YAAY,CAAC,CAAD,CAA9B,CAAT;AACH;AACJ;;AAED,QAAIH,MAAM,CAACK,MAAP,KAAkB,CAAtB,EAAyB;AACrBL,MAAAA,MAAM,CAACM,IAAP,CAAY,GAAZ,EAAiB,IAAjB;AACH;;AAED,WAAO,IAAIC,YAAJ,CAAQvB,KAAR,EAAeI,QAAf,EAAyBG,MAAzB,EAAiCE,SAAjC,EAA4C,KAAKd,MAAjD,EAAyDiB,UAAzD,EAAqEI,MAArE,CAAP;AACH;;AAEDX,EAAAA,WAAW,CAACF,YAAD,EAAe;AACtB;AACA,YAAQA,YAAY,CAACqB,IAArB;AACI,WAAK,WAAL;AACI,eAAO,IAAIC,yBAAJ,CAAqBtB,YAArB,EAAmC,KAAKP,gBAAxC,CAAP;;AACJ;AACI,cAAM,IAAI8B,mCAAJ,CAA4BvB,YAAY,CAACqB,IAAzC,CAAN;AAJR;AAMH;;AArE2B","sourcesContent":["\"use strict\";\r\n\r\nimport Aug from \"./Aug\";\r\nimport ActionRunProcessor from \"./actions/ActionRunProcessor\";\r\nimport LocationFileLine from \"./locations/LocationFileLine\";\r\nimport ProcessorFactory from \"../processor/ProcessorFactory\";\r\nimport Condition from \"./conditions/Condition\"\r\nconst config = require('../config');\r\n\r\nimport {RookAugInvalidKey, RookUnsupportedLocation} from \"../exceptions\";\r\n\r\nexport default class AugFactory {\r\n\r\n    constructor(output) {\r\n        this.output = output;\r\n\r\n        this.processorFactory = new ProcessorFactory();\r\n    }\r\n\r\n    getAug(configuration) {\r\n        const augId = configuration[\"id\"];\r\n\r\n        if (!(typeof augId === 'string' || augId instanceof String)) {\r\n            throw new RookAugInvalidKey('id', configuration);\r\n        }\r\n\r\n        const jsonLocation = configuration[\"location\"];\r\n\r\n        if (null == jsonLocation) {\r\n            throw new RookAugInvalidKey('location', configuration);\r\n        }\r\n\r\n        const location = this.getLocation(jsonLocation);\r\n\r\n        const jsonAction = configuration[\"action\"];\r\n\r\n        if (null == jsonAction) {\r\n            throw new RookAugInvalidKey('action', configuration);\r\n        }\r\n\r\n        const action = new ActionRunProcessor(jsonAction, this.processorFactory);\r\n\r\n        let condition;\r\n\r\n        const conditionConfiguration = configuration['conditional'];\r\n\r\n        if (null != conditionConfiguration) {\r\n            condition = new Condition(conditionConfiguration);\r\n        }\r\n\r\n        const maxAugTime = configuration.maxAugTime === 0 ? 0 :\r\n            configuration.maxAugTime ||\r\n            config.InstrumentationConfig.MAX_AUG_TIME;\r\n\r\n        let limitsSpec = configuration['rateLimit'];\r\n        let limits = [];\r\n\r\n        if (limitsSpec !== undefined && limitsSpec.includes('/')) {\r\n            let limitMatches = limitsSpec.match(/^(\\d+)\\/(\\d+)$/);\r\n\r\n            if (limitMatches !== null) {\r\n                limits = [limitMatches[1], limitMatches[2]];\r\n            }\r\n        }\r\n\r\n        if (limits.length === 0) {\r\n            limits.push(500, 5000);\r\n        }\r\n\r\n        return new Aug(augId, location, action, condition, this.output, maxAugTime, limits);\r\n    }\r\n\r\n    getLocation(jsonLocation) {\r\n        // FUTURE - add support for log_handler location\r\n        switch (jsonLocation.name){\r\n            case \"file_line\":\r\n                return new LocationFileLine(jsonLocation, this.processorFactory);\r\n            default:\r\n                throw new RookUnsupportedLocation(jsonLocation.name);\r\n        }\r\n    }\r\n}\r\n"],"file":"AugFactory.js"}