{"version":3,"sources":["../../../src/augs/RateLimiter.js"],"names":["RateLimiter","constructor","quota","window_size","windows","Map","allow","now","undefined","cleanup","current_window_key","Math","floor","prev_window_key","current_window_usage","get","set","previous_window_usage","prev_weight","weighted_usage","record","key","duration","size","delete"],"mappings":"AAAA;;;;;;;AAEe,MAAMA,WAAN,CAAkB;AAC7BC,EAAAA,WAAW,CAACC,KAAD,EAAQC,WAAR,EAAqB;AAC5B,SAAKD,KAAL,GAAaA,KAAb;AACA,SAAKC,WAAL,GAAmBA,WAAnB;AACA,SAAKC,OAAL,GAAe,IAAIC,GAAJ,EAAf;AACH;;AAEDC,EAAAA,KAAK,CAACC,GAAD,EAAM;AACP,QAAI,KAAKJ,WAAL,KAAqBK,SAAzB,EAAoC;AAChC,aAAO,CAAP;AACH;;AAED,SAAKC,OAAL,CAAaF,GAAb;AAEA,QAAIG,kBAAkB,GAAGC,IAAI,CAACC,KAAL,CAAWL,GAAG,GAAG,KAAKJ,WAAtB,IAAqC,KAAKA,WAAnE;AACA,QAAIU,eAAe,GAAGH,kBAAkB,GAAG,KAAKP,WAAhD;AAEA,QAAIW,oBAAoB,GAAG,KAAKV,OAAL,CAAaW,GAAb,CAAiBL,kBAAjB,CAA3B;;AAEA,QAAII,oBAAoB,KAAKN,SAA7B,EAAwC;AACpCM,MAAAA,oBAAoB,GAAG,CAAvB;AACA,WAAKV,OAAL,CAAaY,GAAb,CAAiBN,kBAAjB,EAAqCI,oBAArC;AACH;;AAED,QAAIG,qBAAqB,GAAG,KAAKb,OAAL,CAAaW,GAAb,CAAiBF,eAAjB,CAA5B;;AAEA,QAAII,qBAAqB,KAAKT,SAA9B,EAAyC;AACrC,UAAIM,oBAAoB,GAAG,KAAKZ,KAAhC,EAAuC;AACnC,eAAO,IAAP;AACH;AACJ,KAJD,MAIO;AACH,UAAIgB,WAAW,GAAG,IAAI,CAACX,GAAG,GAAGG,kBAAP,IAA6B,KAAKP,WAAxD;AACA,UAAIgB,cAAc,GAAIF,qBAAqB,GAAGC,WAAzB,GAAwCJ,oBAA7D;;AAEA,UAAIK,cAAc,GAAG,KAAKjB,KAA1B,EAAiC;AAC7B,eAAO,IAAP;AACH;AACJ;;AAED,WAAOQ,kBAAP;AACH;;AAEDU,EAAAA,MAAM,CAACC,GAAD,EAAMC,QAAN,EAAgB;AAClB,QAAI,KAAKnB,WAAL,KAAqBK,SAAzB,EAAoC;AAChC;AACH;;AAED,SAAKJ,OAAL,CAAaY,GAAb,CAAiBK,GAAjB,EAAsB,KAAKjB,OAAL,CAAaW,GAAb,CAAiBM,GAAjB,IAAwBC,QAA9C;AACH;;AAEDb,EAAAA,OAAO,CAACF,GAAD,EAAM;AACT,QAAI,KAAKH,OAAL,CAAamB,IAAb,GAAoB,EAAxB,EAA4B;AACxB,WAAK,IAAIF,GAAT,IAAgB,KAAKjB,OAArB,EAA8B;AAC1B,YAAIiB,GAAG,GAAGd,GAAG,GAAG,KAAKJ,WAAL,GAAmB,CAAnC,EAAsC;AAClC,eAAKC,OAAL,CAAaoB,MAAb,CAAoBH,GAApB;AACH;AACJ;AACJ;AACJ;;AA1D4B","sourcesContent":["'use strict';\n\nexport default class RateLimiter {\n    constructor(quota, window_size) {\n        this.quota = quota;\n        this.window_size = window_size;\n        this.windows = new Map();\n    }\n\n    allow(now) {\n        if (this.window_size === undefined) {\n            return 0;\n        }\n\n        this.cleanup(now);\n\n        let current_window_key = Math.floor(now / this.window_size) * this.window_size;\n        let prev_window_key = current_window_key - this.window_size;\n\n        let current_window_usage = this.windows.get(current_window_key);\n\n        if (current_window_usage === undefined) {\n            current_window_usage = 0;\n            this.windows.set(current_window_key, current_window_usage);\n        }\n\n        let previous_window_usage = this.windows.get(prev_window_key);\n\n        if (previous_window_usage === undefined) {\n            if (current_window_usage > this.quota) {\n                return null;\n            }\n        } else {\n            let prev_weight = 1 - (now - current_window_key) / this.window_size;\n            let weighted_usage = (previous_window_usage * prev_weight) + current_window_usage;\n\n            if (weighted_usage > this.quota) {\n                return null;\n            }\n        }\n\n        return current_window_key;\n    }\n\n    record(key, duration) {\n        if (this.window_size === undefined) {\n            return;\n        }\n\n        this.windows.set(key, this.windows.get(key) + duration);\n    }\n\n    cleanup(now) {\n        if (this.windows.size > 10) {\n            for (let key of this.windows) {\n                if (key < now - this.window_size * 5) {\n                    this.windows.delete(key);\n                }\n            }\n        }\n    }\n}"],"file":"RateLimiter.js"}