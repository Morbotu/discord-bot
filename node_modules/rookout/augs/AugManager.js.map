{"version":3,"sources":["../../../src/augs/AugManager.js"],"names":["AugManager","constructor","triggerServices","output","factory","AugFactory","augIds","Set","initializeAugs","augs","leftovers","aug","augId","id","undefined","has","delete","addAug","leftoverId","removeAug","config","getAug","e","message","logger","exception","e2","sendRuleStatus","RookError","debug","add","clearAugs","Array","from"],"mappings":"AAAA;;;;;;;AAEA;;AACA;;AAEA;;;;AAEe,MAAMA,UAAN,CAAiB;AAE5BC,EAAAA,WAAW,CAACC,eAAD,EAAkBC,MAAlB,EAA0B;AACjC,SAAKD,eAAL,GAAuBA,eAAvB;AACA,SAAKC,MAAL,GAAcA,MAAd;AACA,SAAKC,OAAL,GAAe,IAAIC,mBAAJ,CAAe,KAAKF,MAApB,CAAf;AAEA,SAAKG,MAAL,GAAc,IAAIC,GAAJ,EAAd;AACH;;AAEDC,EAAAA,cAAc,CAACC,IAAD,EAAO;AACjB,QAAIC,SAAS,GAAG,IAAIH,GAAJ,CAAQ,KAAKD,MAAb,CAAhB;;AAEA,SAAK,IAAIK,GAAT,IAAgBF,IAAhB,EAAsB;AAClB,UAAIG,KAAK,GAAGD,GAAG,CAACE,EAAhB;;AAEA,UAAID,KAAK,KAAKE,SAAd,EAAyB;AACrB;AACH;;AAED,UAAIJ,SAAS,CAACK,GAAV,CAAcH,KAAd,CAAJ,EAA0B;AACtBF,QAAAA,SAAS,CAACM,MAAV,CAAiBJ,KAAjB;AACA;AACH;;AAED,WAAKK,MAAL,CAAYN,GAAZ;AACH;;AAED,SAAK,IAAIO,UAAT,IAAuBR,SAAvB,EAAkC;AAC9B,WAAKS,SAAL,CAAeD,UAAf;AACH;AACJ;;AAEDD,EAAAA,MAAM,CAACG,MAAD,EAAS;AACX,QAAIT,GAAG,GAAG,IAAV;;AACA,QAAI;AACAA,MAAAA,GAAG,GAAG,KAAKP,OAAL,CAAaiB,MAAb,CAAoBD,MAApB,CAAN;AACH,KAFD,CAEE,OAAOE,CAAP,EAAU;AACR,YAAMC,OAAO,GAAG,qBAAhB;;AACAC,qBAAOC,SAAP,CAAiBF,OAAjB,EAA0BD,CAA1B;;AAEA,UAAIV,KAAK,GAAG,IAAZ;;AACA,UAAI;AACAA,QAAAA,KAAK,GAAGQ,MAAM,CAAC,IAAD,CAAd;AACH,OAFD,CAEE,OAAOM,EAAP,EAAW;AACT;AACH;;AAED,WAAKvB,MAAL,CAAYwB,cAAZ,CAA2Bf,KAA3B,EAAkC,OAAlC,EAA2C,IAAIgB,kBAAJ,CAAcN,CAAd,EAAiBC,OAAjB,CAA3C;AAEA;AACH;;AAED,QAAI,KAAKjB,MAAL,CAAYS,GAAZ,CAAgBJ,GAAG,CAACC,KAApB,CAAJ,EAAgC;AAC5BY,qBAAOK,KAAP,CAAa,sBAAb,EAAqClB,GAAG,CAACC,KAAzC;;AACA;AACH;;AAEDY,mBAAOK,KAAP,CAAa,iBAAb,EAAgClB,GAAG,CAACC,KAApC;;AAEAD,IAAAA,GAAG,CAACM,MAAJ,CAAW,KAAKf,eAAhB;AACA,SAAKI,MAAL,CAAYwB,GAAZ,CAAgBnB,GAAG,CAACC,KAApB;AACH;;AAEDO,EAAAA,SAAS,CAACP,KAAD,EAAQ;AACbY,mBAAOK,KAAP,CAAa,mBAAb,EAAkCjB,KAAlC;;AAEA,SAAKV,eAAL,CAAqBiB,SAArB,CAA+BP,KAA/B;AACA,SAAKN,MAAL,CAAYU,MAAZ,CAAmBJ,KAAnB;AACH;;AAEDmB,EAAAA,SAAS,GAAG;AACRP,mBAAOK,KAAP,CAAa,mBAAb;;AAEA,SAAK,IAAIjB,KAAT,IAAkBoB,KAAK,CAACC,IAAN,CAAW,KAAK3B,MAAhB,CAAlB,EAA2C;AACvC,WAAKa,SAAL,CAAeP,KAAf;AACH;;AAED,SAAKV,eAAL,CAAqB6B,SAArB;AACH;;AA/E2B","sourcesContent":["\"use strict\";\r\n\r\nimport AugFactory from \"./AugFactory\";\r\nimport RookError from \"../processor/RookError\";\r\n\r\nimport {logger} from \"../logger\";\r\n\r\nexport default class AugManager {\r\n\r\n    constructor(triggerServices, output) {\r\n        this.triggerServices = triggerServices;\r\n        this.output = output;\r\n        this.factory = new AugFactory(this.output);\r\n\r\n        this.augIds = new Set();\r\n    }\r\n\r\n    initializeAugs(augs) {\r\n        let leftovers = new Set(this.augIds);\r\n\r\n        for (let aug of augs) {\r\n            let augId = aug.id;\r\n\r\n            if (augId === undefined) {\r\n                continue;\r\n            }\r\n\r\n            if (leftovers.has(augId)) {\r\n                leftovers.delete(augId);\r\n                continue;\r\n            }\r\n\r\n            this.addAug(aug);\r\n        }\r\n\r\n        for (let leftoverId of leftovers) {\r\n            this.removeAug(leftoverId);\r\n        }\r\n    }\r\n\r\n    addAug(config) {\r\n        let aug = null;\r\n        try {\r\n            aug = this.factory.getAug(config);\r\n        } catch (e) {\r\n            const message = \"Failed to parse aug\";\r\n            logger.exception(message, e);\r\n\r\n            let augId = null;\r\n            try {\r\n                augId = config['id'];\r\n            } catch (e2) {\r\n                return;\r\n            }\r\n\r\n            this.output.sendRuleStatus(augId, \"Error\", new RookError(e, message));\r\n\r\n            return;\r\n        }\r\n\r\n        if (this.augIds.has(aug.augId)) {\r\n            logger.debug('Aug already set - %s', aug.augId);\r\n            return;\r\n        }\r\n\r\n        logger.debug(\"Adding aug-\\t%s\", aug.augId);\r\n\r\n        aug.addAug(this.triggerServices);\r\n        this.augIds.add(aug.augId);\r\n    }\r\n\r\n    removeAug(augId) {\r\n        logger.debug(\"Removing aug-\\t%s\", augId);\r\n\r\n        this.triggerServices.removeAug(augId);\r\n        this.augIds.delete(augId);\r\n    }\r\n\r\n    clearAugs() {\r\n        logger.debug(\"Clearing all augs\");\r\n\r\n        for (let augId of Array.from(this.augIds)) {\r\n            this.removeAug(augId);\r\n        }\r\n\r\n        this.triggerServices.clearAugs();\r\n    }\r\n\r\n}\r\n"],"file":"AugManager.js"}