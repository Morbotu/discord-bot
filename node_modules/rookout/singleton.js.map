{"version":3,"sources":["../../src/singleton.js"],"names":["uuid4","require","config","Output","default","Singleton","constructor","id","replace","output","servicesStarted","triggerServices","augManager","agentCom","close","logger","info","stopServices","flush","callback","flushMessages","startServices","TriggerServices","AugManager","notifyLambdaActive","context","notifyLambdaInactive","connect","token","host","port","proxy","tags","labels","debug","AgentCom","commandHandler","CommandHandler","setAgentCom","connectToAgent","AgentComConfiguration","TIMEOUT","singleton"],"mappings":"AAAA;;;;;;;AAIA;;AAIA;;AAGA;;AACA;;;;AAVA,MAAMA,KAAK,GAAGC,OAAO,CAAC,SAAD,CAArB;;AAIA,MAAMC,MAAM,GAAGD,OAAO,CAAC,UAAD,CAAtB;;AAIA,MAAME,MAAM,GAAGF,OAAO,CAAC,mBAAD,CAAP,CAA6BG,OAA5C;;AAIA,MAAMC,SAAN,CAAgB;AACZC,EAAAA,WAAW,GAAG;AACV,SAAKC,EAAL,GAAUP,KAAK,GAAGQ,OAAR,CAAgB,KAAhB,EAAuB,EAAvB,CAAV;AACA,SAAKC,MAAL,GAAc,IAAIN,MAAJ,CAAW,KAAKI,EAAhB,CAAd;AAEA,SAAKG,eAAL,GAAuB,KAAvB;AACA,SAAKC,eAAL,GAAuB,IAAvB;AACA,SAAKC,UAAL,GAAkB,IAAlB;AAEA,SAAKC,QAAL,GAAgB,IAAhB;AACH;;AAEDC,EAAAA,KAAK,GAAG;AACJC,mBAAOC,IAAP,CAAY,eAAZ;;AACA,QAAI,SAAS,KAAKH,QAAlB,EAA4B;AACxB,WAAKA,QAAL,CAAcC,KAAd;AACH;;AAED,SAAKG,YAAL;AACH;;AAEDC,EAAAA,KAAK,CAACC,QAAD,EAAW;AACZ,SAAKV,MAAL,CAAYW,aAAZ,CAA0BD,QAA1B;AACH;;AAEDE,EAAAA,aAAa,GAAG;AACZ,QAAI,KAAKX,eAAT,EAA0B;AACtB;AACH;;AAED,SAAKC,eAAL,GAAuB,IAAIW,wBAAJ,EAAvB;AACA,SAAKV,UAAL,GAAkB,IAAIW,mBAAJ,CAAe,KAAKZ,eAApB,EAAqC,KAAKF,MAA1C,CAAlB;AACA,SAAKC,eAAL,GAAuB,IAAvB;AACH;;AAEDO,EAAAA,YAAY,GAAG;AACX,QAAI,CAAC,KAAKP,eAAV,EAA2B;AACvB;AACH;;AAED,SAAKE,UAAL,GAAkB,IAAlB;AAEA,SAAKD,eAAL,CAAqBG,KAArB;AACA,SAAKH,eAAL,GAAuB,IAAvB;AAEA,SAAKD,eAAL,GAAuB,KAAvB;AACH;;AAEDc,EAAAA,kBAAkB,CAACC,OAAD,EAAU;AACxB,QAAI,SAAS,KAAKZ,QAAlB,EAA4B;AACxB,WAAKA,QAAL,CAAcW,kBAAd,CAAiCC,OAAjC;AACH;AACJ;;AAEDC,EAAAA,oBAAoB,GAAG;AACnB,QAAI,SAAS,KAAKb,QAAlB,EAA4B;AACxB,WAAKA,QAAL,CAAca,oBAAd;AACH;AACJ;;AAEDC,EAAAA,OAAO,CAACC,KAAD,EAAQC,IAAR,EAAcC,IAAd,EAAoBC,KAApB,EAA2BC,IAA3B,EAAiCC,MAAjC,EAAyC;AAC5C,SAAKZ,aAAL;;AAEAN,mBAAOmB,KAAP,CAAa,6BAAb,EAA4CL,IAA5C,EAAkDC,IAAlD;;AACA,UAAMK,QAAQ,GAAGlC,OAAO,CAAC,qBAAD,CAAP,CAA+BG,OAAhD;;AACA,SAAKS,QAAL,GAAgB,IAAIsB,QAAJ,CAAa,KAAK5B,EAAlB,EAAsBsB,IAAtB,EAA4BC,IAA5B,EAAkCC,KAAlC,EAAyCH,KAAzC,EAAgDK,MAAhD,EAAwDD,IAAxD,CAAhB;AACA,SAAKI,cAAL,GAAsB,IAAIC,uBAAJ,CAAmB,KAAKxB,QAAxB,EAAkC,KAAKD,UAAvC,CAAtB;AACA,SAAKH,MAAL,CAAY6B,WAAZ,CAAwB,KAAKzB,QAA7B;AAEA,WAAO,KAAKA,QAAL,CAAc0B,cAAd,CAA6BrC,MAAM,CAACsC,qBAAP,CAA6BC,OAA7B,GAAuC,IAApE,CAAP;AACH;;AAtEW;;AAyET,IAAIC,SAAS,GAAG,IAAIrC,SAAJ,EAAhB","sourcesContent":["\"use strict\";\r\n\r\nconst uuid4 = require(\"uuid/v4\");\r\n\r\nimport CommandHandler from \"./com_ws/CommandHandler\";\r\n\r\nconst config = require('./config');\r\n\r\nimport {logger} from \"./logger\";\r\n\r\nconst Output = require(\"./com_ws/OutputWs\").default;\r\nimport TriggerServices from \"./TriggerServices\";\r\nimport AugManager from \"./augs/AugManager\";\r\n\r\nclass Singleton {\r\n    constructor() {\r\n        this.id = uuid4().replace(/\\-/g, \"\");\r\n        this.output = new Output(this.id);\r\n\r\n        this.servicesStarted = false;\r\n        this.triggerServices = null;\r\n        this.augManager = null;\r\n\r\n        this.agentCom = null;\r\n    }\r\n\r\n    close() {\r\n        logger.info(\"Shutting down\");\r\n        if (null !== this.agentCom) {\r\n            this.agentCom.close();\r\n        }\r\n\r\n        this.stopServices();\r\n    }\r\n\r\n    flush(callback) {\r\n        this.output.flushMessages(callback);\r\n    }\r\n\r\n    startServices() {\r\n        if (this.servicesStarted) {\r\n            return;\r\n        }\r\n\r\n        this.triggerServices = new TriggerServices();\r\n        this.augManager = new AugManager(this.triggerServices, this.output);\r\n        this.servicesStarted = true;\r\n    }\r\n\r\n    stopServices() {\r\n        if (!this.servicesStarted) {\r\n            return;\r\n        }\r\n\r\n        this.augManager = null;\r\n\r\n        this.triggerServices.close();\r\n        this.triggerServices = null;\r\n\r\n        this.servicesStarted = false;\r\n    }\r\n\r\n    notifyLambdaActive(context) {\r\n        if (null !== this.agentCom) {\r\n            this.agentCom.notifyLambdaActive(context);\r\n        }\r\n    }\r\n\r\n    notifyLambdaInactive() {\r\n        if (null !== this.agentCom) {\r\n            this.agentCom.notifyLambdaInactive();\r\n        }\r\n    }\r\n\r\n    connect(token, host, port, proxy, tags, labels) {\r\n        this.startServices();\r\n\r\n        logger.debug(\"Initiating AgentCom-\\t%s:%d\", host, port);\r\n        const AgentCom = require(\"./com_ws/AgentComWs\").default;\r\n        this.agentCom = new AgentCom(this.id, host, port, proxy, token, labels, tags);\r\n        this.commandHandler = new CommandHandler(this.agentCom, this.augManager);\r\n        this.output.setAgentCom(this.agentCom);\r\n\r\n        return this.agentCom.connectToAgent(config.AgentComConfiguration.TIMEOUT * 1000);\r\n    }\r\n}\r\n\r\nexport let singleton = new Singleton();\r\n"],"file":"singleton.js"}