{"version":3,"sources":["../../src/CircleCiOrbWrapperInternal.js"],"names":["rook","require","path","process","argv","length","args","slice","scriptIndex","undefined","ignoreNext","some","arg","index","filename","isAbsolute","resolve","concat","execArgv","unshift","__filename","start","Module","runMain","console","log","exit"],"mappings":"AAAA;AAEA;;;;;;AAMA,MAAMA,IAAI,GAAGC,OAAO,CAAC,SAAD,CAApB;;AACA,MAAMC,IAAI,GAAGD,OAAO,CAAC,MAAD,CAApB;;AAEA,IAAIE,OAAO,CAACC,IAAR,CAAaC,MAAjB,EAAyB;AACrB;AACA,MAAIC,IAAI,GAAGH,OAAO,CAACC,IAAR,CAAaG,KAAb,CAAmB,CAAnB,CAAX,CAFqB,CAIrB;;AACA,MAAIC,WAAW,GAAGC,SAAlB;AACA,MAAIC,UAAU,GAAG,KAAjB;AACAJ,EAAAA,IAAI,CAACK,IAAL,CAAU,UAASC,GAAT,EAAcC,KAAd,EAAqB;AAC3B,QAAIH,UAAJ,EAAgB;AACZ;AACH;;AAED,QAAIE,GAAG,CAAC,CAAD,CAAH,KAAW,GAAf,EAAoB;AAChB,UAAIJ,WAAW,KAAKC,SAApB,EAA8B;AAC1BD,QAAAA,WAAW,GAAGK,KAAd;AACH;;AACDH,MAAAA,UAAU,GAAG,IAAb;AACH;AACJ,GAXD;;AAaA,MAAIF,WAAW,KAAKC,SAApB,EAA+B;AAC3BH,IAAAA,IAAI,GAAGA,IAAI,CAACC,KAAL,CAAWC,WAAX,CAAP,CAD2B,CAG3B;;AACA,UAAMM,QAAQ,GAAGR,IAAI,CAAC,CAAD,CAArB;;AACA,QAAI,CAACJ,IAAI,CAACa,UAAL,CAAgBD,QAAhB,CAAL,EAAgC;AAC5BR,MAAAA,IAAI,CAAC,CAAD,CAAJ,GAAUJ,IAAI,CAACc,OAAL,CAAaF,QAAb,CAAV;AACH,KAP0B,CAS3B;;;AACAX,IAAAA,OAAO,CAACC,IAAR,GAAe,CAAC,MAAD,EAASa,MAAT,CAAgBX,IAAhB,CAAf;AACAH,IAAAA,OAAO,CAACe,QAAR,CAAiBC,OAAjB,CAAyBC,UAAzB;AAEApB,IAAAA,IAAI,CAACqB,KAAL;;AAEA,QAAIC,MAAM,GAAGrB,OAAO,CAAC,QAAD,CAApB;;AACAqB,IAAAA,MAAM,CAACC,OAAP;AACH,GAjBD,MAiBO;AACHC,IAAAA,OAAO,CAACC,GAAR,CAAY,iDAAZ;AACAtB,IAAAA,OAAO,CAACuB,IAAR,CAAa,CAAb;AACH;AACJ","sourcesContent":["\"use strict\";\n\n/**\n * This file parses the command line and re-run the program with striped command line.\n * we will replace the 'node --nodeParams CircleCiOrbWrapperInternal.js' with 'node' including any additional flags passed to node.\n * this logic is very similar to babel-node\n */\n\nconst rook = require('rookout');\nconst path = require('path');\n\nif (process.argv.length) {\n    // slice all arguments up to the first filename since they're rookout args that we handle\n    let args = process.argv.slice(2);\n\n    // looking for the script argument - ignoring all node flags since they are already applied to this process\n    let scriptIndex = undefined;\n    let ignoreNext = false;\n    args.some(function(arg, index) {\n        if (ignoreNext) {\n            return;\n        }\n\n        if (arg[0] !== \"-\") {\n            if (scriptIndex === undefined){\n                scriptIndex = index;\n            }\n            ignoreNext = true;\n        }\n    });\n\n    if (scriptIndex !== undefined) {\n        args = args.slice(scriptIndex);\n\n        // make the filename absolute\n        const filename = args[0];\n        if (!path.isAbsolute(filename)) {\n            args[0] = path.resolve(filename);\n        }\n\n        // add back on node and concat the sliced args\n        process.argv = [\"node\"].concat(args);\n        process.execArgv.unshift(__filename);\n\n        rook.start();\n\n        let Module = require(\"module\");\n        Module.runMain();\n    } else {\n        console.log(\"Bad command line - could not find script to run\");\n        process.exit(1);\n    }\n}\n"],"file":"CircleCiOrbWrapperInternal.js"}