{"version":3,"sources":["../../../src/com_ws/information.js"],"names":["agent_info_pb","require","os","ip","path","getos","config","Information","constructor","TypeError","_collectors","_getCollectors","collect","output","key","Object","keys","value","Function","SCMInformation","_get_commit","_get_origin","userCommit","GitConfiguration","GIT_COMMIT","process","env","ROOKOUT_COMMIT","gitRoot","_get_git_root","git","getRevision","e","logger","exception","ROOKOUT_GIT","findRoot","dirname","resolve","executable","userRemoteOrigin","GIT_ORIGIN","ROOKOUT_REMOTE_ORIGIN","getRemoteOrigin","PlatformInformation","version","NetworkInformation","address","hostname","SystemInformation","platform","release","_getDistro","arch","distro","os_info","dist","codename","VersionInformation","AgentInformation","mainModule","undefined","filename","basename","argv","pid","pack_agent_info","info","packed_info","setAgentId","agent_id","version_info","setVersion","setCommit","commit","network_info","setIpAddr","network","ip_addr","setNetwork","system_info","setHostname","system","setOs","setOsVersion","os_version","setDistro","setArch","setSystem","platform_info","setPlatform","scm_info","scm","setOrigin","origin","setScm","setExecutable","setCommandArgumentsList","command_arguments","setProcessId","process_id","labels_map","getLabelsMap","labels","forEach","set","setTagsList","tags"],"mappings":"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","sourcesContent":["\"use strict\";\nimport {logger} from '../logger';\n\n\nimport git from \"../git\";\n\nconst agent_info_pb = require(\"../protobuf/agent_info_pb\");\nconst os = require(\"os\");\nconst ip = require(\"ip\");\nconst path = require(\"path\");\nconst getos = require(\"getos\");\nconst config = require('../config');\n\n\nclass Information {\n    constructor() {\n        if (this.constructor === Information) {\n            throw new TypeError(\"Abstract class \\\"Information\\\" cannot be instantiated directly.\");\n        }\n\n        this._collectors = this._getCollectors();\n    }\n\n    // Override this method without calling super.\n    /* abstract */ _getCollectors() {\n        throw new TypeError(\"Inheriting classes must implement _getCollectors\");\n    }\n\n    async collect() {\n        let output = {};\n        for (let key of Object.keys(this._collectors)) {\n            let value = this._collectors[key];\n            if (value instanceof Function) {\n                value = value();\n            }\n            output[key] = await value;\n        }\n        return output;\n    }\n}\n\nclass SCMInformation extends Information {\n    _getCollectors() {\n        return {\n            \"commit\": this._get_commit,\n            \"origin\": this._get_origin\n        }\n    }\n\n    _get_commit() {\n        let userCommit = config.GitConfiguration.GIT_COMMIT || process.env.ROOKOUT_COMMIT || \"\";\n\n        if (userCommit === \"\") {\n            try {\n                let gitRoot = this._get_git_root();\n\n                if (gitRoot !== \"\") {\n                    if (userCommit === \"\") {\n                        userCommit = git.getRevision(gitRoot);\n                    }\n\n                    return userCommit;\n                }\n            } catch (e) {\n                logger.exception(\"Failed to get git commit\");\n            }\n\n            return \"\";\n        }\n\n        return userCommit;\n    }\n\n    _get_git_root() {\n        let gitRoot = process.env.ROOKOUT_GIT || \"\";\n        if (gitRoot === \"\") {\n            gitRoot = git.findRoot(path.dirname(path.resolve(executable)));\n        }\n\n        return gitRoot;\n    }\n\n    _get_origin() {\n        let userRemoteOrigin = config.GitConfiguration.GIT_ORIGIN || process.env.ROOKOUT_REMOTE_ORIGIN || \"\";\n\n        if (userRemoteOrigin === \"\") {\n            try {\n                let gitRoot = this._get_git_root();\n\n                if (gitRoot !== \"\") {\n                    if (userRemoteOrigin === \"\") {\n                        userRemoteOrigin = git.getRemoteOrigin(gitRoot);\n                    }\n\n                    return userRemoteOrigin;\n                }\n            } catch (e) {\n                logger.exception(\"Failed to get git remote origin\");\n            }\n\n            return \"\";\n        }\n\n        return userRemoteOrigin;\n    }\n}\n\nclass PlatformInformation extends Information {\n    _getCollectors() {\n        return {\n            \"platform\": \"node\",\n            \"version\": process.version\n        }\n    }\n}\n\nclass NetworkInformation extends Information {\n    _getCollectors() {\n        return {\n            \"ip_addr\": ip.address,\n            \"network\": os.hostname\n        }\n    }\n}\n\nclass SystemInformation extends Information {\n    _getCollectors() {\n        return {\n            \"hostname\": os.hostname,\n            \"os\": os.platform,\n            \"os_version\": os.release,\n            \"distro\": this._getDistro,\n            \"arch\": os.arch\n        }\n    }\n\n    async _getDistro() {\n        if (os.platform() !== \"linux\") {\n            return \"<NA>\";\n        }\n\n        let distro = null;\n\n        getos((e, os_info) => {\n            if (e) {\n                throw e;\n            }\n            distro = os_info.dist + \" \" + os_info.codename + \" \" + os_info.release;\n            return distro;\n        });\n    }\n}\n\nclass VersionInformation extends Information {\n    _getCollectors() {\n        return {\n            \"version\": AgentVersionInfo.Version,\n            \"commit\": AgentVersionInfo.Commit\n        }\n    }\n}\n\nclass AgentInformation extends Information {\n    _getCollectors() {\n        return {\n            \"version\": () => new VersionInformation().collect(),\n            \"network\": () => new NetworkInformation().collect(),\n            \"system\": () => new SystemInformation().collect(),\n            \"platform\": () => new PlatformInformation().collect(),\n            \"scm\": () => new SCMInformation().collect(),\n            \"executable\": () => {\n                if (process.mainModule !== undefined && process.mainModule.filename !== undefined) {\n                    return path.basename(process.mainModule.filename);\n                } else {\n                    return path.basename(process.argv[0]);\n                }\n            },\n            \"command_arguments\": process.argv,\n            \"process_id\": process.pid\n        }\n    }\n}\n\nexport async function collect() {\n    return new AgentInformation().collect();\n}\n\nexport function pack_agent_info(info) {\n    let packed_info = new agent_info_pb.AgentInformation();\n    packed_info.setAgentId(info.agent_id);\n\n    let version_info = new agent_info_pb.VersionInformation();\n    version_info.setVersion(info.version.version);\n    version_info.setCommit(info.version.commit);\n    packed_info.setVersion(version_info);\n\n    let network_info = new agent_info_pb.NetworkInformation();\n    network_info.setIpAddr(info.network.ip_addr);\n    network_info.setNetwork(info.network.network);\n    packed_info.setNetwork(network_info);\n\n    let system_info = new agent_info_pb.SystemInformation();\n    system_info.setHostname(info.system.hostname);\n    system_info.setOs(info.system.os);\n    system_info.setOsVersion(info.system.os_version);\n    system_info.setDistro(info.system.distro);\n    system_info.setArch(info.system.arch);\n    packed_info.setSystem(system_info);\n\n    let platform_info = new agent_info_pb.PlatformInformation();\n    platform_info.setPlatform(info.platform.platform);\n    platform_info.setVersion(info.platform.version);\n    packed_info.setPlatform(platform_info);\n\n    let scm_info = new agent_info_pb.SCMInformation();\n    scm_info.setCommit(info.scm.commit);\n    scm_info.setOrigin(info.scm.origin);\n    packed_info.setScm(scm_info);\n\n    packed_info.setExecutable(info.executable);\n    packed_info.setCommandArgumentsList(info.command_arguments);\n    packed_info.setProcessId(info.process_id);\n\n    let labels_map = packed_info.getLabelsMap();\n\n    Object.keys(info.labels).forEach((key) => {\n       labels_map.set(key, info.labels[key]);\n    });\n\n    packed_info.setTagsList(info.tags);\n\n    return packed_info;\n}\n"],"file":"information.js"}