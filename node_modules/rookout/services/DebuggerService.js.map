{"version":3,"sources":["../../../src/services/DebuggerService.js"],"names":["assert","require","path","config","fs","CryptoJS","SHA256","Pos","constructor","filename","lineno","column","toKey","ScriptNotifier","debug","pendingNotifications","scripts","setDebug","loadScripts","getAllMatchInfoByFilename","fileName","includeExternals","matchesInfos","scriptId","Object","keys","script","matchInfo","getMatchInfo","push","getScriptObjectById","hasOwnProperty","registerNotification","aug","fileHash","callback","removed","augId","execute","matchInfos","length","basename","fileContent","readFileSync","e","replace","currentFileHash","toString","enc","Hex","sendWarning","RookError","RookSourceFilePathSuggestion","addScript","source","scriptWrapper","ScriptWrapper","notification","removeAug","undefined","clearAugs","augIds","AugHolder","breakpoints","positions","executeAugs","pos","frame","stack","augs","logger","error","addAug","info","setBreak","setActive","currentAugs","augsToKeep","augsToDelete","clearBreak","setRemoved","clearAllBreaks","DebuggerService","augHolder","scriptNotifier","close","start","notEqual","inSourceMap","getGeneratedPosition","line","self","getDebugger","user_line","scriptLoaded","getScript","engine","selectEngine","InspectorDebug","v8debug","V8Debug","RookUnsupportedEngineSelection","verifyInspectFlagEnabledUnderElectron","processArguments","process","argv","includes","RookElectronInspectFlagNotSet","InstrumentationConfig","ENGINE","versions","version","split","major","parseInt","substr","minor","RookUnsupportedNodeVersion"],"mappings":"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","sourcesContent":["\"use strict\";\r\n\r\nimport RookError from '../processor/RookError'\r\n\r\nconst assert = require('assert');\r\nconst path = require('path');\r\n\r\nimport {canonizeFileName} from \"../utils\";\r\nimport ScriptWrapper from \"./ScriptWrapper\";\r\nimport { RookElectronInspectFlagNotSet, RookSourceFilePathSuggestion } from '../exceptions';\r\n\r\nimport {logger} from \"../logger\";\r\nconst config = require('../config');\r\n\r\nconst fs = require('fs');\r\nconst CryptoJS = require('crypto-js');\r\nconst SHA256 = require('crypto-js/sha256');\r\n\r\nimport {normalize} from \"./source-map-util\"\r\n\r\nimport {RookUnsupportedEngineSelection, RookUnsupportedNodeVersion} from \"../exceptions\";\r\n\r\n// Note: this is a bit of a heck that is used by V8Debug as well\r\nclass Pos {\r\n\r\n    constructor(filename, lineno, column) {\r\n        this.filename = filename;\r\n        this.lineno = lineno;\r\n        this.column = column;\r\n    }\r\n\r\n    toKey() {\r\n        return this.filename + \"@\" + this.lineno + \"@\" + this.column;\r\n    }\r\n}\r\n\r\nclass ScriptNotifier {\r\n\r\n    constructor() {\r\n        this.debug = null;\r\n\r\n        this.pendingNotifications = {};\r\n\r\n        this.scripts = {};\r\n    }\r\n\r\n    setDebug(debug) {\r\n        this.debug = debug;\r\n        this.loadScripts();\r\n    }\r\n\r\n    getAllMatchInfoByFilename(fileName, includeExternals = false) {\r\n        fileName = canonizeFileName(fileName);\r\n\r\n        let matchesInfos = [];\r\n        for (let scriptId of Object.keys(this.scripts)) {\r\n            const script = this.scripts[scriptId];\r\n            const matchInfo = script.getMatchInfo(fileName, includeExternals);\r\n            if (null !== matchInfo) {\r\n                matchesInfos.push(matchInfo);\r\n            }\r\n        }\r\n\r\n        return matchesInfos;\r\n    }\r\n\r\n    getScriptObjectById(scriptId) {\r\n        if (this.scripts.hasOwnProperty(scriptId)) {\r\n            return this.scripts[scriptId];\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    registerNotification(aug, fileName, fileHash, includeExternals, callback, removed) {\r\n        fileName = canonizeFileName(fileName);\r\n\r\n        this.pendingNotifications[aug.augId] = {\r\n            aug : aug,\r\n            fileName: fileName,\r\n            includeExternals: includeExternals,\r\n            execute : callback,\r\n            removed : removed,\r\n            fileHash: fileHash,\r\n        };\r\n\r\n        const matchInfos = this.getAllMatchInfoByFilename(fileName, includeExternals);\r\n        for (let matchInfo of matchInfos){\r\n            callback(matchInfo);\r\n        }\r\n\r\n        if (matchInfos.length === 0) {\r\n            let filename = path.basename(fileName);\r\n            for (let scriptId of Object.keys(this.scripts)) {\r\n                const script = this.scripts[scriptId];\r\n                if (path.basename(script.filename) === filename) {\r\n                    let fileContent;\r\n                    try {\r\n                        fileContent = fs.readFileSync(script.filename, 'utf8');\r\n                    } catch (e) {\r\n                        continue;\r\n                    }\r\n                    fileContent = fileContent.replace(/(?:\\r\\n|\\r|\\n)/g, \"\\n\");\r\n                    const currentFileHash = SHA256(fileContent).toString(CryptoJS.enc.Hex);\r\n\r\n                    if (fileHash === currentFileHash) {\r\n                        aug.sendWarning(new RookError(new RookSourceFilePathSuggestion(fileName, script.filename)));\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    loadScripts() {\r\n        for (let script of this.debug.scripts()) {\r\n            this.addScript(script.scriptId, script.filename, script.source);\r\n        }\r\n    }\r\n\r\n    addScript(scriptId, filename, source) {\r\n        if (null == filename || this.scripts.hasOwnProperty(scriptId)) {\r\n            return;\r\n        }\r\n\r\n        const scriptWrapper = new ScriptWrapper(scriptId, filename, source);\r\n\r\n        for (let augId of Object.keys(this.pendingNotifications)) {\r\n            let notification = this.pendingNotifications[augId];\r\n            const matchInfo = scriptWrapper.getMatchInfo(notification.fileName, notification.includeExternals);\r\n            if (null !== matchInfo) {\r\n                notification.execute(matchInfo);\r\n            } else {\r\n                if (path.basename(filename) === path.basename(notification.fileName)) {\r\n                    let fileContent = source.replace(/(?:\\r\\n|\\r|\\n)/g, \"\\n\");\r\n                    const currentFileHash = SHA256(fileContent).toString(CryptoJS.enc.Hex);\r\n\r\n                    if (notification.fileHash === currentFileHash) {\r\n                        notification.aug.sendWarning(new RookError(new RookSourceFilePathSuggestion(notification.fileName, filename)));\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        this.scripts[scriptId] = scriptWrapper;\r\n    }\r\n\r\n    removeAug(augId) {\r\n        let notification = this.pendingNotifications[augId];\r\n        if (undefined !== notification) {\r\n            notification.removed();\r\n            delete this.pendingNotifications[augId];\r\n        }\r\n    }\r\n\r\n    clearAugs() {\r\n        let augIds = Object.keys(this.pendingNotifications);\r\n        for (let augId of augIds) {\r\n            this.removeAug(augId);\r\n        }\r\n\r\n        this.pendingNotifications = {};\r\n    }\r\n\r\n}\r\n\r\nclass AugHolder {\r\n\r\n    constructor(debug) {\r\n        this.debug = debug;\r\n\r\n        this.breakpoints = {};\r\n        this.positions = {};\r\n    }\r\n\r\n    executeAugs(pos, frame, stack) {\r\n        let augs = this.breakpoints[pos.toKey()];\r\n\r\n        if (null == augs) {\r\n            logger.error(\"Aug not found! %s@%d\", pos.filename, pos.lineno)\r\n        } else {\r\n            for (let aug of augs) {\r\n                aug.execute(frame, stack, {});\r\n            }\r\n        }\r\n    }\r\n\r\n    addAug(filename, lineno, column, aug) {\r\n        logger.info(\"Setting breakpoint at %s:%s:%s\", filename, lineno, column);\r\n\r\n        let pos = new Pos(canonizeFileName(filename), lineno, column);\r\n        if (this.breakpoints.hasOwnProperty(pos.toKey())) {\r\n            this.breakpoints[pos.toKey()].push(aug);\r\n        } else {\r\n            this.debug.setBreak(pos);\r\n\r\n            this.breakpoints[pos.toKey()]= [aug];\r\n        }\r\n\r\n        this.positions[aug.augId] = pos;\r\n        aug.setActive();\r\n    }\r\n\r\n    removeAug(augId) {\r\n        if (!this.positions.hasOwnProperty(augId)) {\r\n            return;\r\n        }\r\n\r\n        // Get current augs in position\r\n        let pos = this.positions[augId];\r\n\r\n        let currentAugs = this.breakpoints[pos.toKey()];\r\n\r\n        // Divide augs into delete and keep\r\n        let augsToKeep = [];\r\n        let augsToDelete = [];\r\n        for (let aug of currentAugs) {\r\n            if (aug.augId === augId) {\r\n                augsToDelete.push(aug);\r\n            } else {\r\n                augsToKeep.push(aug);\r\n            }\r\n        }\r\n\r\n        // Update list\r\n        if (augsToKeep.length > 0) {\r\n            this.breakpoints[pos.toKey()] = augsToKeep\r\n        } else {\r\n            this.debug.clearBreak(pos);\r\n            delete this.breakpoints[pos.toKey()];\r\n        }\r\n\r\n        // Update status\r\n        for (let aug of augsToDelete) {\r\n            aug.setRemoved();\r\n        }\r\n\r\n        // Remove from position list\r\n        delete this.positions[augId];\r\n    }\r\n\r\n    clearAugs() {\r\n        let augIds = Object.keys(this.positions);\r\n        for (let augId of augIds) {\r\n            this.removeAug(augId);\r\n        }\r\n\r\n        this.breakpoints = {};\r\n        this.positions = {};\r\n        this.debug.clearAllBreaks();\r\n    }\r\n}\r\n\r\nexport class DebuggerService {\r\n\r\n    constructor() {\r\n        this.debug = null;\r\n        this.augHolder = null;\r\n        this.scriptNotifier = null;\r\n    }\r\n\r\n    close() {\r\n        this.clearAugs();\r\n\r\n        if (null !== this.debug) {\r\n            this.debug.close();\r\n            this.debug = null;\r\n        }\r\n    }\r\n\r\n    addAug(filename, matchInfo, lineno, column, aug) {\r\n        this.start();\r\n\r\n        // Note- this is a hack used to simplify testing, script should never be null in production\r\n        if (null === matchInfo) {\r\n            matchInfo = this.scriptNotifier.getAllMatchInfoByFilename(filename)[0];\r\n            assert.notEqual(matchInfo, undefined, \"Script not found\");\r\n        }\r\n\r\n        if (matchInfo.inSourceMap) {\r\n            // Normalizing the filename using the source-map normalize function to avoid filename mismatch\r\n            const pos = matchInfo.script.getGeneratedPosition(normalize(matchInfo.filename), lineno, column);\r\n            lineno = pos.line;\r\n            column = pos.column;\r\n        }\r\n\r\n        this.augHolder.addAug(matchInfo.script.filename, lineno, column, aug);\r\n    }\r\n\r\n    registerNotification(augId, fileName, fileHash, includeExternals, callback, removed) {\r\n        this.start();\r\n\r\n        this.scriptNotifier.registerNotification(augId, fileName, fileHash, includeExternals, callback, removed);\r\n    }\r\n\r\n    removeAug(augId) {\r\n        if (null !== this.augHolder) {\r\n            this.augHolder.removeAug(augId);\r\n        }\r\n\r\n        if (null !== this.scriptNotifier) {\r\n            this.scriptNotifier.removeAug(augId);\r\n        }\r\n    }\r\n\r\n    clearAugs() {\r\n        if (null !== this.augHolder) {\r\n            this.augHolder.clearAugs();\r\n        }\r\n\r\n        if (null !== this.scriptNotifier) {\r\n            this.scriptNotifier.clearAugs();\r\n        }\r\n    }\r\n\r\n    start() {\r\n        if (null === this.debug) {\r\n            const self = this;\r\n\r\n            this.scriptNotifier = new ScriptNotifier();\r\n            this.debug = this.getDebugger();\r\n\r\n            this.augHolder = new AugHolder(this.debug);\r\n            this.scriptNotifier.setDebug(this.debug);\r\n        }\r\n    }\r\n\r\n    getDebugger() {\r\n        const self = this;\r\n\r\n        function user_line(pos, frame, stack) {\r\n            self.augHolder.executeAugs(pos, frame, stack);\r\n        }\r\n\r\n        function scriptLoaded(scriptId, filename, source) {\r\n            self.scriptNotifier.addScript(scriptId, filename, source);\r\n        }\r\n\r\n        function getScript(scriptId) {\r\n            return self.scriptNotifier.getScriptObjectById(scriptId);\r\n        }\r\n\r\n        const engine = DebuggerService.selectEngine();\r\n        switch (engine) {\r\n            case \"inspector\":\r\n                const InspectorDebug = require('./InspectorDebug');\r\n                return new InspectorDebug.InspectorDebug(user_line, scriptLoaded, getScript);\r\n\r\n            case \"v8\":\r\n                const v8debug = require('./V8Debug');\r\n                return new v8debug.V8Debug(user_line, scriptLoaded, getScript);\r\n\r\n            default:\r\n                throw new RookUnsupportedEngineSelection(engine);\r\n        }\r\n\r\n    }\r\n\r\n\r\n    //NOTE:: if inspect is not specified under electron, inspector api will fail to load\r\n    //NOTE:: its important that this function will happen here and not in the InspectorDebug\r\n    //          since we actually want to fail if inspect is not specified\r\n    static verifyInspectFlagEnabledUnderElectron() {\r\n        let processArguments = process.argv.toString();\r\n        if (processArguments.includes('electron') &&\r\n            !processArguments.includes('--inspect')) {\r\n            throw new RookElectronInspectFlagNotSet();\r\n        }\r\n    }\r\n\r\n    static selectEngine() {\r\n        this.verifyInspectFlagEnabledUnderElectron();\r\n\r\n        let engine = config.InstrumentationConfig.ENGINE;\r\n        if (!(engine) || engine === \"auto\") {\r\n            const versions = process.version.split('.');\r\n            const major = parseInt(versions[0].substr(1));\r\n            const minor = parseInt(versions[1]);\r\n            if (major < 4) {\r\n                throw new RookUnsupportedNodeVersion(process.version);\r\n            } else if (major >= 8) {\r\n                return \"inspector\";\r\n            } else {\r\n                return \"v8\";\r\n            }\r\n        } else {\r\n            return engine;\r\n        }\r\n    }\r\n}\r\n"],"file":"DebuggerService.js"}