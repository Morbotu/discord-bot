{"version":3,"sources":["../../../src/services/InspectorDebug.js"],"names":["inspector","require","url","rook","global","__rookout_backchannel","DebuggerBackchannel","InspectorDebug","constructor","userLine","scriptLoaded","getScript","self","getScriptCallback","positionsToBreakpoints","breakpointsToPositions","loadedScriptsCount","maxLoadedScripts","parseInt","process","env","ROOKOUT_MAX_SCRIPTS","session","Session","connect","e","RookInspectorConnectFailed","on","script","savedOptions","logger","warn","stop","start","params","isModule","scriptURL","startsWith","fileURLToPath","undefined","post","scriptId","err","scriptSource","exception","error","message","pos","hitBreakpoints","InspectorFrameNamespace","callFrames","InspectorStackNamespace","active","setBreak","result","filename","pathToFileURL","lineNumber","lineno","columnNumber","column","response","RookInspectorSetBreakpointFailed","toKey","breakpointId","clearBreak","clearAllBreaks","positions","Object","keys","i","length","message_id","cb","Error","getProperties","object","ownProperties","objectId","value","RookInspectorFailedToGetObject","close","disconnect","scripts"],"mappings":"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","sourcesContent":["\"use strict\";\r\n\r\nconst inspector = require('inspector');\r\nconst url = require('url');\r\n\r\nimport {logger} from \"../logger\";\r\n\r\nimport {RookInspectorSetBreakpointFailed, RookInspectorConnectFailed} from \"../exceptions\";\r\n\r\nimport {isBlackListedModule} from \"./IgnoredNodeModules\";\r\n\r\nimport InspectorFrameNamespace from \"../processor/namespaces/InspectorFrameNamespace\";\r\nimport InspectorStackNamespace from \"../processor/namespaces/InspectorStackNamespace\";\r\nimport DebuggerBackchannel from \"./DebuggerBackchannel\";\r\nconst rook = require(\"../index\");\r\n\r\nglobal.__rookout_backchannel = new DebuggerBackchannel();\r\n\r\nexport class InspectorDebug {\r\n    constructor(userLine, scriptLoaded, getScript) {\r\n        const self = this;\r\n\r\n        this.getScriptCallback = getScript;\r\n\r\n        this.positionsToBreakpoints = {};\r\n        this.breakpointsToPositions = {};\r\n        this.loadedScriptsCount = 0;\r\n        this.maxLoadedScripts = parseInt(process.env.ROOKOUT_MAX_SCRIPTS) || 20000;\r\n\r\n        this.session = new inspector.Session();\r\n\r\n        try {\r\n            this.session.connect();\r\n        } catch (e) {\r\n            throw new RookInspectorConnectFailed(e);\r\n        }\r\n\r\n        this.session.on('Debugger.scriptParsed', (script) => {\r\n            if (self.session === null) {\r\n                return;\r\n            }\r\n\r\n            try {\r\n                self.loadedScriptsCount++;\r\n\r\n                if (self.loadedScriptsCount > self.maxLoadedScripts && rook.savedOptions !== null) {\r\n                    logger.warn(\"An unreasonable number of scripts loaded - restarting\");\r\n\r\n                    self.loadedScriptsCount = 0;\r\n                    rook.stop();\r\n                    rook.start();\r\n                    return;\r\n                }\r\n\r\n                if (false === script.params.isModule) {\r\n                    let scriptURL = script.params.url;\r\n\r\n                    // URLs instead of paths started in 10.12 which also introduced this\r\n                    // url.fileURLToPath. We assume we will not receive URLs before 10.12\r\n                    if (scriptURL.startsWith(\"file:\") && url.fileURLToPath !== undefined) {\r\n                        scriptURL = url.fileURLToPath(scriptURL);\r\n                    }\r\n\r\n                    if (isBlackListedModule(scriptURL)) {\r\n                        return;\r\n                    }\r\n\r\n                    self.post('Debugger.getScriptSource', {scriptId: script.params.scriptId}, (err, scriptSource) => {\r\n                        if (err) {\r\n                            logger.exception(\"Failed to get script source\", err);\r\n                            return;\r\n                        }\r\n\r\n                        try {\r\n                            scriptLoaded(script.params.scriptId, scriptURL, scriptSource.scriptSource);\r\n                        } catch (error) {\r\n                            logger.exception(\"Exception when processing script source callback\", error);\r\n                        }\r\n                    });\r\n                }\r\n            } catch (error) {\r\n                logger.exception(\"Exception when processing script parse callback\", error);\r\n            }\r\n        });\r\n\r\n        this.session.on('Debugger.paused', (message) => {\r\n            if (self.session === null) {\r\n                return;\r\n            }\r\n\r\n            try {\r\n                const pos = self.breakpointsToPositions[message.params.hitBreakpoints[0]];\r\n\r\n                userLine(pos,\r\n                    new InspectorFrameNamespace(self, message.params.callFrames[0]),\r\n                    new InspectorStackNamespace(self, message.params.callFrames));\r\n            } catch (error) {\r\n                logger.exception(error);\r\n            } finally {\r\n                this.post(\"Debugger.resume\");\r\n            }\r\n        });\r\n\r\n        this.session.on('error', (error) => {\r\n            try {\r\n                logger.exception('InspectorDebugger error', error);\r\n            } catch (e) {\r\n\r\n            }\r\n        });\r\n\r\n        this.post('Debugger.enable');\r\n        this.post('Debugger.setBreakpointsActive', {active: true});\r\n    }\r\n\r\n    setBreak(pos) {\r\n        let result = {};\r\n\r\n        let scriptURL = pos.filename;\r\n\r\n        if (url.pathToFileURL !== undefined) {\r\n            scriptURL = url.pathToFileURL(scriptURL);\r\n        }\r\n\r\n        this.post(\r\n            'Debugger.setBreakpointByUrl', {\r\n                url: scriptURL,\r\n                lineNumber: pos.lineno - 1,\r\n                columnNumber: pos.column + 1\r\n            },\r\n            (error, response) => {\r\n                result.error = error;\r\n                result.response = response;\r\n        });\r\n\r\n        if (null != result.error) {\r\n            throw new RookInspectorSetBreakpointFailed(result.error);\r\n        }\r\n\r\n        this.positionsToBreakpoints[pos.toKey()] = result.response.breakpointId;\r\n        this.breakpointsToPositions[result.response.breakpointId] = pos;\r\n    }\r\n\r\n    clearBreak(pos) {\r\n        // If we have an object, hash it\r\n        if (pos.toKey) {\r\n            pos = pos.toKey();\r\n        }\r\n\r\n        const breakpointId = this.positionsToBreakpoints[pos];\r\n        if (undefined === breakpointId) {\r\n            return;\r\n        }\r\n\r\n        delete this.positionsToBreakpoints[pos];\r\n        delete this.breakpointsToPositions[breakpointId];\r\n\r\n        let result = {};\r\n        this.post(\r\n            'Debugger.removeBreakpoint', {breakpointId: breakpointId}, (error) => {\r\n                result.error = error;\r\n            }\r\n        );\r\n\r\n        if (null != result.error) {\r\n            logger.error(\"Failed to remove breakpoint\", result.error);\r\n        }\r\n    }\r\n\r\n    clearAllBreaks() {\r\n        let positions = Object.keys(this.positionsToBreakpoints);\r\n        for (let i = 0; i < positions.length; ++i) {\r\n            this.clearBreak(positions[i]);\r\n        }\r\n\r\n        this.positionsToBreakpoints = {};\r\n        this.breakpointsToPositions = {};\r\n    }\r\n\r\n    post(message_id, params, cb) {\r\n        if (this.session === null) {\r\n            if (cb !== undefined) {\r\n                cb(new Error(\"No debug session\"), null);\r\n            }\r\n\r\n            return;\r\n        }\r\n\r\n        this.session.post(message_id, params, cb);\r\n    }\r\n\r\n    getProperties(object, ownProperties = true) {\r\n        let result = {};\r\n\r\n        this.post('Runtime.getProperties', {objectId: object.objectId,\r\n            ownProperties: ownProperties}, (error, value) => {\r\n            if (error) {\r\n                result.error = error;\r\n            } else {\r\n                result.value = value.result;\r\n            }\r\n        });\r\n\r\n        if (result.error) {\r\n            throw new RookInspectorFailedToGetObject(object);\r\n        }\r\n\r\n        return result.value;\r\n    }\r\n\r\n    getScript(scriptId) {\r\n        return this.getScriptCallback(scriptId);\r\n    }\r\n\r\n    close() {\r\n        this.clearAllBreaks();\r\n\r\n        this.post('Debugger.setBreakpointsActive', {active: false});\r\n        this.post('Debugger.disable');\r\n        this.session.disconnect();\r\n        this.session = null;\r\n    }\r\n\r\n    scripts() {\r\n        return [];\r\n    }\r\n\r\n}\r\n"],"file":"InspectorDebug.js"}