"use strict";

// source: agent_info.proto

/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
var jspb = require('google-protobuf');

var goog = jspb;
var global = Function('return this')();
goog.exportSymbol('proto.com.rookout.AgentInformation', null, global);
goog.exportSymbol('proto.com.rookout.AgentInformationArray', null, global);
goog.exportSymbol('proto.com.rookout.NetworkInformation', null, global);
goog.exportSymbol('proto.com.rookout.PlatformInformation', null, global);
goog.exportSymbol('proto.com.rookout.SCMInformation', null, global);
goog.exportSymbol('proto.com.rookout.SystemInformation', null, global);
goog.exportSymbol('proto.com.rookout.VersionInformation', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */

proto.com.rookout.SCMInformation = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};

goog.inherits(proto.com.rookout.SCMInformation, jspb.Message);

if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.com.rookout.SCMInformation.displayName = 'proto.com.rookout.SCMInformation';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */


proto.com.rookout.NetworkInformation = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};

goog.inherits(proto.com.rookout.NetworkInformation, jspb.Message);

if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.com.rookout.NetworkInformation.displayName = 'proto.com.rookout.NetworkInformation';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */


proto.com.rookout.SystemInformation = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};

goog.inherits(proto.com.rookout.SystemInformation, jspb.Message);

if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.com.rookout.SystemInformation.displayName = 'proto.com.rookout.SystemInformation';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */


proto.com.rookout.VersionInformation = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};

goog.inherits(proto.com.rookout.VersionInformation, jspb.Message);

if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.com.rookout.VersionInformation.displayName = 'proto.com.rookout.VersionInformation';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */


proto.com.rookout.PlatformInformation = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};

goog.inherits(proto.com.rookout.PlatformInformation, jspb.Message);

if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.com.rookout.PlatformInformation.displayName = 'proto.com.rookout.PlatformInformation';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */


proto.com.rookout.AgentInformation = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.com.rookout.AgentInformation.repeatedFields_, null);
};

goog.inherits(proto.com.rookout.AgentInformation, jspb.Message);

if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.com.rookout.AgentInformation.displayName = 'proto.com.rookout.AgentInformation';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */


proto.com.rookout.AgentInformationArray = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.com.rookout.AgentInformationArray.repeatedFields_, null);
};

goog.inherits(proto.com.rookout.AgentInformationArray, jspb.Message);

if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.com.rookout.AgentInformationArray.displayName = 'proto.com.rookout.AgentInformationArray';
}

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.com.rookout.SCMInformation.prototype.toObject = function (opt_includeInstance) {
    return proto.com.rookout.SCMInformation.toObject(opt_includeInstance, this);
  };
  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.com.rookout.SCMInformation} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */


  proto.com.rookout.SCMInformation.toObject = function (includeInstance, msg) {
    var f,
        obj = {
      commit: jspb.Message.getFieldWithDefault(msg, 1, ""),
      origin: jspb.Message.getFieldWithDefault(msg, 2, "")
    };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }

    return obj;
  };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.rookout.SCMInformation}
 */


proto.com.rookout.SCMInformation.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.rookout.SCMInformation();
  return proto.com.rookout.SCMInformation.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.rookout.SCMInformation} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.rookout.SCMInformation}
 */


proto.com.rookout.SCMInformation.deserializeBinaryFromReader = function (msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }

    var field = reader.getFieldNumber();

    switch (field) {
      case 1:
        var value =
        /** @type {string} */
        reader.readString();
        msg.setCommit(value);
        break;

      case 2:
        var value =
        /** @type {string} */
        reader.readString();
        msg.setOrigin(value);
        break;

      default:
        reader.skipField();
        break;
    }
  }

  return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */


proto.com.rookout.SCMInformation.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter();
  proto.com.rookout.SCMInformation.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.rookout.SCMInformation} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */


proto.com.rookout.SCMInformation.serializeBinaryToWriter = function (message, writer) {
  var f = undefined;
  f = message.getCommit();

  if (f.length > 0) {
    writer.writeString(1, f);
  }

  f = message.getOrigin();

  if (f.length > 0) {
    writer.writeString(2, f);
  }
};
/**
 * optional string commit = 1;
 * @return {string}
 */


proto.com.rookout.SCMInformation.prototype.getCommit = function () {
  return (
    /** @type {string} */
    jspb.Message.getFieldWithDefault(this, 1, "")
  );
};
/**
 * @param {string} value
 * @return {!proto.com.rookout.SCMInformation} returns this
 */


proto.com.rookout.SCMInformation.prototype.setCommit = function (value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};
/**
 * optional string origin = 2;
 * @return {string}
 */


proto.com.rookout.SCMInformation.prototype.getOrigin = function () {
  return (
    /** @type {string} */
    jspb.Message.getFieldWithDefault(this, 2, "")
  );
};
/**
 * @param {string} value
 * @return {!proto.com.rookout.SCMInformation} returns this
 */


proto.com.rookout.SCMInformation.prototype.setOrigin = function (value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.com.rookout.NetworkInformation.prototype.toObject = function (opt_includeInstance) {
    return proto.com.rookout.NetworkInformation.toObject(opt_includeInstance, this);
  };
  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.com.rookout.NetworkInformation} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */


  proto.com.rookout.NetworkInformation.toObject = function (includeInstance, msg) {
    var f,
        obj = {
      ipAddr: jspb.Message.getFieldWithDefault(msg, 1, ""),
      network: jspb.Message.getFieldWithDefault(msg, 2, ""),
      externalIp: jspb.Message.getFieldWithDefault(msg, 3, "")
    };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }

    return obj;
  };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.rookout.NetworkInformation}
 */


proto.com.rookout.NetworkInformation.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.rookout.NetworkInformation();
  return proto.com.rookout.NetworkInformation.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.rookout.NetworkInformation} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.rookout.NetworkInformation}
 */


proto.com.rookout.NetworkInformation.deserializeBinaryFromReader = function (msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }

    var field = reader.getFieldNumber();

    switch (field) {
      case 1:
        var value =
        /** @type {string} */
        reader.readString();
        msg.setIpAddr(value);
        break;

      case 2:
        var value =
        /** @type {string} */
        reader.readString();
        msg.setNetwork(value);
        break;

      case 3:
        var value =
        /** @type {string} */
        reader.readString();
        msg.setExternalIp(value);
        break;

      default:
        reader.skipField();
        break;
    }
  }

  return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */


proto.com.rookout.NetworkInformation.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter();
  proto.com.rookout.NetworkInformation.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.rookout.NetworkInformation} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */


proto.com.rookout.NetworkInformation.serializeBinaryToWriter = function (message, writer) {
  var f = undefined;
  f = message.getIpAddr();

  if (f.length > 0) {
    writer.writeString(1, f);
  }

  f = message.getNetwork();

  if (f.length > 0) {
    writer.writeString(2, f);
  }

  f = message.getExternalIp();

  if (f.length > 0) {
    writer.writeString(3, f);
  }
};
/**
 * optional string ip_addr = 1;
 * @return {string}
 */


proto.com.rookout.NetworkInformation.prototype.getIpAddr = function () {
  return (
    /** @type {string} */
    jspb.Message.getFieldWithDefault(this, 1, "")
  );
};
/**
 * @param {string} value
 * @return {!proto.com.rookout.NetworkInformation} returns this
 */


proto.com.rookout.NetworkInformation.prototype.setIpAddr = function (value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};
/**
 * optional string network = 2;
 * @return {string}
 */


proto.com.rookout.NetworkInformation.prototype.getNetwork = function () {
  return (
    /** @type {string} */
    jspb.Message.getFieldWithDefault(this, 2, "")
  );
};
/**
 * @param {string} value
 * @return {!proto.com.rookout.NetworkInformation} returns this
 */


proto.com.rookout.NetworkInformation.prototype.setNetwork = function (value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};
/**
 * optional string external_ip = 3;
 * @return {string}
 */


proto.com.rookout.NetworkInformation.prototype.getExternalIp = function () {
  return (
    /** @type {string} */
    jspb.Message.getFieldWithDefault(this, 3, "")
  );
};
/**
 * @param {string} value
 * @return {!proto.com.rookout.NetworkInformation} returns this
 */


proto.com.rookout.NetworkInformation.prototype.setExternalIp = function (value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.com.rookout.SystemInformation.prototype.toObject = function (opt_includeInstance) {
    return proto.com.rookout.SystemInformation.toObject(opt_includeInstance, this);
  };
  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.com.rookout.SystemInformation} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */


  proto.com.rookout.SystemInformation.toObject = function (includeInstance, msg) {
    var f,
        obj = {
      hostname: jspb.Message.getFieldWithDefault(msg, 1, ""),
      os: jspb.Message.getFieldWithDefault(msg, 2, ""),
      osVersion: jspb.Message.getFieldWithDefault(msg, 3, ""),
      distro: jspb.Message.getFieldWithDefault(msg, 4, ""),
      arch: jspb.Message.getFieldWithDefault(msg, 5, "")
    };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }

    return obj;
  };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.rookout.SystemInformation}
 */


proto.com.rookout.SystemInformation.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.rookout.SystemInformation();
  return proto.com.rookout.SystemInformation.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.rookout.SystemInformation} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.rookout.SystemInformation}
 */


proto.com.rookout.SystemInformation.deserializeBinaryFromReader = function (msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }

    var field = reader.getFieldNumber();

    switch (field) {
      case 1:
        var value =
        /** @type {string} */
        reader.readString();
        msg.setHostname(value);
        break;

      case 2:
        var value =
        /** @type {string} */
        reader.readString();
        msg.setOs(value);
        break;

      case 3:
        var value =
        /** @type {string} */
        reader.readString();
        msg.setOsVersion(value);
        break;

      case 4:
        var value =
        /** @type {string} */
        reader.readString();
        msg.setDistro(value);
        break;

      case 5:
        var value =
        /** @type {string} */
        reader.readString();
        msg.setArch(value);
        break;

      default:
        reader.skipField();
        break;
    }
  }

  return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */


proto.com.rookout.SystemInformation.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter();
  proto.com.rookout.SystemInformation.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.rookout.SystemInformation} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */


proto.com.rookout.SystemInformation.serializeBinaryToWriter = function (message, writer) {
  var f = undefined;
  f = message.getHostname();

  if (f.length > 0) {
    writer.writeString(1, f);
  }

  f = message.getOs();

  if (f.length > 0) {
    writer.writeString(2, f);
  }

  f = message.getOsVersion();

  if (f.length > 0) {
    writer.writeString(3, f);
  }

  f = message.getDistro();

  if (f.length > 0) {
    writer.writeString(4, f);
  }

  f = message.getArch();

  if (f.length > 0) {
    writer.writeString(5, f);
  }
};
/**
 * optional string hostname = 1;
 * @return {string}
 */


proto.com.rookout.SystemInformation.prototype.getHostname = function () {
  return (
    /** @type {string} */
    jspb.Message.getFieldWithDefault(this, 1, "")
  );
};
/**
 * @param {string} value
 * @return {!proto.com.rookout.SystemInformation} returns this
 */


proto.com.rookout.SystemInformation.prototype.setHostname = function (value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};
/**
 * optional string os = 2;
 * @return {string}
 */


proto.com.rookout.SystemInformation.prototype.getOs = function () {
  return (
    /** @type {string} */
    jspb.Message.getFieldWithDefault(this, 2, "")
  );
};
/**
 * @param {string} value
 * @return {!proto.com.rookout.SystemInformation} returns this
 */


proto.com.rookout.SystemInformation.prototype.setOs = function (value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};
/**
 * optional string os_version = 3;
 * @return {string}
 */


proto.com.rookout.SystemInformation.prototype.getOsVersion = function () {
  return (
    /** @type {string} */
    jspb.Message.getFieldWithDefault(this, 3, "")
  );
};
/**
 * @param {string} value
 * @return {!proto.com.rookout.SystemInformation} returns this
 */


proto.com.rookout.SystemInformation.prototype.setOsVersion = function (value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};
/**
 * optional string distro = 4;
 * @return {string}
 */


proto.com.rookout.SystemInformation.prototype.getDistro = function () {
  return (
    /** @type {string} */
    jspb.Message.getFieldWithDefault(this, 4, "")
  );
};
/**
 * @param {string} value
 * @return {!proto.com.rookout.SystemInformation} returns this
 */


proto.com.rookout.SystemInformation.prototype.setDistro = function (value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};
/**
 * optional string arch = 5;
 * @return {string}
 */


proto.com.rookout.SystemInformation.prototype.getArch = function () {
  return (
    /** @type {string} */
    jspb.Message.getFieldWithDefault(this, 5, "")
  );
};
/**
 * @param {string} value
 * @return {!proto.com.rookout.SystemInformation} returns this
 */


proto.com.rookout.SystemInformation.prototype.setArch = function (value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.com.rookout.VersionInformation.prototype.toObject = function (opt_includeInstance) {
    return proto.com.rookout.VersionInformation.toObject(opt_includeInstance, this);
  };
  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.com.rookout.VersionInformation} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */


  proto.com.rookout.VersionInformation.toObject = function (includeInstance, msg) {
    var f,
        obj = {
      version: jspb.Message.getFieldWithDefault(msg, 1, ""),
      commit: jspb.Message.getFieldWithDefault(msg, 2, "")
    };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }

    return obj;
  };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.rookout.VersionInformation}
 */


proto.com.rookout.VersionInformation.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.rookout.VersionInformation();
  return proto.com.rookout.VersionInformation.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.rookout.VersionInformation} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.rookout.VersionInformation}
 */


proto.com.rookout.VersionInformation.deserializeBinaryFromReader = function (msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }

    var field = reader.getFieldNumber();

    switch (field) {
      case 1:
        var value =
        /** @type {string} */
        reader.readString();
        msg.setVersion(value);
        break;

      case 2:
        var value =
        /** @type {string} */
        reader.readString();
        msg.setCommit(value);
        break;

      default:
        reader.skipField();
        break;
    }
  }

  return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */


proto.com.rookout.VersionInformation.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter();
  proto.com.rookout.VersionInformation.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.rookout.VersionInformation} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */


proto.com.rookout.VersionInformation.serializeBinaryToWriter = function (message, writer) {
  var f = undefined;
  f = message.getVersion();

  if (f.length > 0) {
    writer.writeString(1, f);
  }

  f = message.getCommit();

  if (f.length > 0) {
    writer.writeString(2, f);
  }
};
/**
 * optional string version = 1;
 * @return {string}
 */


proto.com.rookout.VersionInformation.prototype.getVersion = function () {
  return (
    /** @type {string} */
    jspb.Message.getFieldWithDefault(this, 1, "")
  );
};
/**
 * @param {string} value
 * @return {!proto.com.rookout.VersionInformation} returns this
 */


proto.com.rookout.VersionInformation.prototype.setVersion = function (value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};
/**
 * optional string commit = 2;
 * @return {string}
 */


proto.com.rookout.VersionInformation.prototype.getCommit = function () {
  return (
    /** @type {string} */
    jspb.Message.getFieldWithDefault(this, 2, "")
  );
};
/**
 * @param {string} value
 * @return {!proto.com.rookout.VersionInformation} returns this
 */


proto.com.rookout.VersionInformation.prototype.setCommit = function (value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.com.rookout.PlatformInformation.prototype.toObject = function (opt_includeInstance) {
    return proto.com.rookout.PlatformInformation.toObject(opt_includeInstance, this);
  };
  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.com.rookout.PlatformInformation} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */


  proto.com.rookout.PlatformInformation.toObject = function (includeInstance, msg) {
    var f,
        obj = {
      platform: jspb.Message.getFieldWithDefault(msg, 1, ""),
      version: jspb.Message.getFieldWithDefault(msg, 2, ""),
      variant: jspb.Message.getFieldWithDefault(msg, 3, "")
    };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }

    return obj;
  };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.rookout.PlatformInformation}
 */


proto.com.rookout.PlatformInformation.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.rookout.PlatformInformation();
  return proto.com.rookout.PlatformInformation.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.rookout.PlatformInformation} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.rookout.PlatformInformation}
 */


proto.com.rookout.PlatformInformation.deserializeBinaryFromReader = function (msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }

    var field = reader.getFieldNumber();

    switch (field) {
      case 1:
        var value =
        /** @type {string} */
        reader.readString();
        msg.setPlatform(value);
        break;

      case 2:
        var value =
        /** @type {string} */
        reader.readString();
        msg.setVersion(value);
        break;

      case 3:
        var value =
        /** @type {string} */
        reader.readString();
        msg.setVariant(value);
        break;

      default:
        reader.skipField();
        break;
    }
  }

  return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */


proto.com.rookout.PlatformInformation.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter();
  proto.com.rookout.PlatformInformation.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.rookout.PlatformInformation} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */


proto.com.rookout.PlatformInformation.serializeBinaryToWriter = function (message, writer) {
  var f = undefined;
  f = message.getPlatform();

  if (f.length > 0) {
    writer.writeString(1, f);
  }

  f = message.getVersion();

  if (f.length > 0) {
    writer.writeString(2, f);
  }

  f = message.getVariant();

  if (f.length > 0) {
    writer.writeString(3, f);
  }
};
/**
 * optional string platform = 1;
 * @return {string}
 */


proto.com.rookout.PlatformInformation.prototype.getPlatform = function () {
  return (
    /** @type {string} */
    jspb.Message.getFieldWithDefault(this, 1, "")
  );
};
/**
 * @param {string} value
 * @return {!proto.com.rookout.PlatformInformation} returns this
 */


proto.com.rookout.PlatformInformation.prototype.setPlatform = function (value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};
/**
 * optional string version = 2;
 * @return {string}
 */


proto.com.rookout.PlatformInformation.prototype.getVersion = function () {
  return (
    /** @type {string} */
    jspb.Message.getFieldWithDefault(this, 2, "")
  );
};
/**
 * @param {string} value
 * @return {!proto.com.rookout.PlatformInformation} returns this
 */


proto.com.rookout.PlatformInformation.prototype.setVersion = function (value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};
/**
 * optional string variant = 3;
 * @return {string}
 */


proto.com.rookout.PlatformInformation.prototype.getVariant = function () {
  return (
    /** @type {string} */
    jspb.Message.getFieldWithDefault(this, 3, "")
  );
};
/**
 * @param {string} value
 * @return {!proto.com.rookout.PlatformInformation} returns this
 */


proto.com.rookout.PlatformInformation.prototype.setVariant = function (value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */


proto.com.rookout.AgentInformation.repeatedFields_ = [7, 11];

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.com.rookout.AgentInformation.prototype.toObject = function (opt_includeInstance) {
    return proto.com.rookout.AgentInformation.toObject(opt_includeInstance, this);
  };
  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.com.rookout.AgentInformation} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */


  proto.com.rookout.AgentInformation.toObject = function (includeInstance, msg) {
    var f,
        obj = {
      agentId: jspb.Message.getFieldWithDefault(msg, 1, ""),
      version: (f = msg.getVersion()) && proto.com.rookout.VersionInformation.toObject(includeInstance, f),
      network: (f = msg.getNetwork()) && proto.com.rookout.NetworkInformation.toObject(includeInstance, f),
      system: (f = msg.getSystem()) && proto.com.rookout.SystemInformation.toObject(includeInstance, f),
      platform: (f = msg.getPlatform()) && proto.com.rookout.PlatformInformation.toObject(includeInstance, f),
      executable: jspb.Message.getFieldWithDefault(msg, 6, ""),
      commandArgumentsList: (f = jspb.Message.getRepeatedField(msg, 7)) == null ? undefined : f,
      processId: jspb.Message.getFieldWithDefault(msg, 8, 0),
      labelsMap: (f = msg.getLabelsMap()) ? f.toObject(includeInstance, undefined) : [],
      scm: (f = msg.getScm()) && proto.com.rookout.SCMInformation.toObject(includeInstance, f),
      tagsList: (f = jspb.Message.getRepeatedField(msg, 11)) == null ? undefined : f
    };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }

    return obj;
  };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.rookout.AgentInformation}
 */


proto.com.rookout.AgentInformation.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.rookout.AgentInformation();
  return proto.com.rookout.AgentInformation.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.rookout.AgentInformation} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.rookout.AgentInformation}
 */


proto.com.rookout.AgentInformation.deserializeBinaryFromReader = function (msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }

    var field = reader.getFieldNumber();

    switch (field) {
      case 1:
        var value =
        /** @type {string} */
        reader.readString();
        msg.setAgentId(value);
        break;

      case 2:
        var value = new proto.com.rookout.VersionInformation();
        reader.readMessage(value, proto.com.rookout.VersionInformation.deserializeBinaryFromReader);
        msg.setVersion(value);
        break;

      case 3:
        var value = new proto.com.rookout.NetworkInformation();
        reader.readMessage(value, proto.com.rookout.NetworkInformation.deserializeBinaryFromReader);
        msg.setNetwork(value);
        break;

      case 4:
        var value = new proto.com.rookout.SystemInformation();
        reader.readMessage(value, proto.com.rookout.SystemInformation.deserializeBinaryFromReader);
        msg.setSystem(value);
        break;

      case 5:
        var value = new proto.com.rookout.PlatformInformation();
        reader.readMessage(value, proto.com.rookout.PlatformInformation.deserializeBinaryFromReader);
        msg.setPlatform(value);
        break;

      case 6:
        var value =
        /** @type {string} */
        reader.readString();
        msg.setExecutable(value);
        break;

      case 7:
        var value =
        /** @type {string} */
        reader.readString();
        msg.addCommandArguments(value);
        break;

      case 8:
        var value =
        /** @type {number} */
        reader.readUint32();
        msg.setProcessId(value);
        break;

      case 9:
        var value = msg.getLabelsMap();
        reader.readMessage(value, function (message, reader) {
          jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readString, null, "", "");
        });
        break;

      case 10:
        var value = new proto.com.rookout.SCMInformation();
        reader.readMessage(value, proto.com.rookout.SCMInformation.deserializeBinaryFromReader);
        msg.setScm(value);
        break;

      case 11:
        var value =
        /** @type {string} */
        reader.readString();
        msg.addTags(value);
        break;

      default:
        reader.skipField();
        break;
    }
  }

  return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */


proto.com.rookout.AgentInformation.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter();
  proto.com.rookout.AgentInformation.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.rookout.AgentInformation} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */


proto.com.rookout.AgentInformation.serializeBinaryToWriter = function (message, writer) {
  var f = undefined;
  f = message.getAgentId();

  if (f.length > 0) {
    writer.writeString(1, f);
  }

  f = message.getVersion();

  if (f != null) {
    writer.writeMessage(2, f, proto.com.rookout.VersionInformation.serializeBinaryToWriter);
  }

  f = message.getNetwork();

  if (f != null) {
    writer.writeMessage(3, f, proto.com.rookout.NetworkInformation.serializeBinaryToWriter);
  }

  f = message.getSystem();

  if (f != null) {
    writer.writeMessage(4, f, proto.com.rookout.SystemInformation.serializeBinaryToWriter);
  }

  f = message.getPlatform();

  if (f != null) {
    writer.writeMessage(5, f, proto.com.rookout.PlatformInformation.serializeBinaryToWriter);
  }

  f = message.getExecutable();

  if (f.length > 0) {
    writer.writeString(6, f);
  }

  f = message.getCommandArgumentsList();

  if (f.length > 0) {
    writer.writeRepeatedString(7, f);
  }

  f = message.getProcessId();

  if (f !== 0) {
    writer.writeUint32(8, f);
  }

  f = message.getLabelsMap(true);

  if (f && f.getLength() > 0) {
    f.serializeBinary(9, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeString);
  }

  f = message.getScm();

  if (f != null) {
    writer.writeMessage(10, f, proto.com.rookout.SCMInformation.serializeBinaryToWriter);
  }

  f = message.getTagsList();

  if (f.length > 0) {
    writer.writeRepeatedString(11, f);
  }
};
/**
 * optional string agent_id = 1;
 * @return {string}
 */


proto.com.rookout.AgentInformation.prototype.getAgentId = function () {
  return (
    /** @type {string} */
    jspb.Message.getFieldWithDefault(this, 1, "")
  );
};
/**
 * @param {string} value
 * @return {!proto.com.rookout.AgentInformation} returns this
 */


proto.com.rookout.AgentInformation.prototype.setAgentId = function (value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};
/**
 * optional VersionInformation version = 2;
 * @return {?proto.com.rookout.VersionInformation}
 */


proto.com.rookout.AgentInformation.prototype.getVersion = function () {
  return (
    /** @type{?proto.com.rookout.VersionInformation} */
    jspb.Message.getWrapperField(this, proto.com.rookout.VersionInformation, 2)
  );
};
/**
 * @param {?proto.com.rookout.VersionInformation|undefined} value
 * @return {!proto.com.rookout.AgentInformation} returns this
*/


proto.com.rookout.AgentInformation.prototype.setVersion = function (value) {
  return jspb.Message.setWrapperField(this, 2, value);
};
/**
 * Clears the message field making it undefined.
 * @return {!proto.com.rookout.AgentInformation} returns this
 */


proto.com.rookout.AgentInformation.prototype.clearVersion = function () {
  return this.setVersion(undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */


proto.com.rookout.AgentInformation.prototype.hasVersion = function () {
  return jspb.Message.getField(this, 2) != null;
};
/**
 * optional NetworkInformation network = 3;
 * @return {?proto.com.rookout.NetworkInformation}
 */


proto.com.rookout.AgentInformation.prototype.getNetwork = function () {
  return (
    /** @type{?proto.com.rookout.NetworkInformation} */
    jspb.Message.getWrapperField(this, proto.com.rookout.NetworkInformation, 3)
  );
};
/**
 * @param {?proto.com.rookout.NetworkInformation|undefined} value
 * @return {!proto.com.rookout.AgentInformation} returns this
*/


proto.com.rookout.AgentInformation.prototype.setNetwork = function (value) {
  return jspb.Message.setWrapperField(this, 3, value);
};
/**
 * Clears the message field making it undefined.
 * @return {!proto.com.rookout.AgentInformation} returns this
 */


proto.com.rookout.AgentInformation.prototype.clearNetwork = function () {
  return this.setNetwork(undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */


proto.com.rookout.AgentInformation.prototype.hasNetwork = function () {
  return jspb.Message.getField(this, 3) != null;
};
/**
 * optional SystemInformation system = 4;
 * @return {?proto.com.rookout.SystemInformation}
 */


proto.com.rookout.AgentInformation.prototype.getSystem = function () {
  return (
    /** @type{?proto.com.rookout.SystemInformation} */
    jspb.Message.getWrapperField(this, proto.com.rookout.SystemInformation, 4)
  );
};
/**
 * @param {?proto.com.rookout.SystemInformation|undefined} value
 * @return {!proto.com.rookout.AgentInformation} returns this
*/


proto.com.rookout.AgentInformation.prototype.setSystem = function (value) {
  return jspb.Message.setWrapperField(this, 4, value);
};
/**
 * Clears the message field making it undefined.
 * @return {!proto.com.rookout.AgentInformation} returns this
 */


proto.com.rookout.AgentInformation.prototype.clearSystem = function () {
  return this.setSystem(undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */


proto.com.rookout.AgentInformation.prototype.hasSystem = function () {
  return jspb.Message.getField(this, 4) != null;
};
/**
 * optional PlatformInformation platform = 5;
 * @return {?proto.com.rookout.PlatformInformation}
 */


proto.com.rookout.AgentInformation.prototype.getPlatform = function () {
  return (
    /** @type{?proto.com.rookout.PlatformInformation} */
    jspb.Message.getWrapperField(this, proto.com.rookout.PlatformInformation, 5)
  );
};
/**
 * @param {?proto.com.rookout.PlatformInformation|undefined} value
 * @return {!proto.com.rookout.AgentInformation} returns this
*/


proto.com.rookout.AgentInformation.prototype.setPlatform = function (value) {
  return jspb.Message.setWrapperField(this, 5, value);
};
/**
 * Clears the message field making it undefined.
 * @return {!proto.com.rookout.AgentInformation} returns this
 */


proto.com.rookout.AgentInformation.prototype.clearPlatform = function () {
  return this.setPlatform(undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */


proto.com.rookout.AgentInformation.prototype.hasPlatform = function () {
  return jspb.Message.getField(this, 5) != null;
};
/**
 * optional string executable = 6;
 * @return {string}
 */


proto.com.rookout.AgentInformation.prototype.getExecutable = function () {
  return (
    /** @type {string} */
    jspb.Message.getFieldWithDefault(this, 6, "")
  );
};
/**
 * @param {string} value
 * @return {!proto.com.rookout.AgentInformation} returns this
 */


proto.com.rookout.AgentInformation.prototype.setExecutable = function (value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};
/**
 * repeated string command_arguments = 7;
 * @return {!Array<string>}
 */


proto.com.rookout.AgentInformation.prototype.getCommandArgumentsList = function () {
  return (
    /** @type {!Array<string>} */
    jspb.Message.getRepeatedField(this, 7)
  );
};
/**
 * @param {!Array<string>} value
 * @return {!proto.com.rookout.AgentInformation} returns this
 */


proto.com.rookout.AgentInformation.prototype.setCommandArgumentsList = function (value) {
  return jspb.Message.setField(this, 7, value || []);
};
/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.com.rookout.AgentInformation} returns this
 */


proto.com.rookout.AgentInformation.prototype.addCommandArguments = function (value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 7, value, opt_index);
};
/**
 * Clears the list making it empty but non-null.
 * @return {!proto.com.rookout.AgentInformation} returns this
 */


proto.com.rookout.AgentInformation.prototype.clearCommandArgumentsList = function () {
  return this.setCommandArgumentsList([]);
};
/**
 * optional uint32 process_id = 8;
 * @return {number}
 */


proto.com.rookout.AgentInformation.prototype.getProcessId = function () {
  return (
    /** @type {number} */
    jspb.Message.getFieldWithDefault(this, 8, 0)
  );
};
/**
 * @param {number} value
 * @return {!proto.com.rookout.AgentInformation} returns this
 */


proto.com.rookout.AgentInformation.prototype.setProcessId = function (value) {
  return jspb.Message.setProto3IntField(this, 8, value);
};
/**
 * map<string, string> labels = 9;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,string>}
 */


proto.com.rookout.AgentInformation.prototype.getLabelsMap = function (opt_noLazyCreate) {
  return (
    /** @type {!jspb.Map<string,string>} */
    jspb.Message.getMapField(this, 9, opt_noLazyCreate, null)
  );
};
/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.com.rookout.AgentInformation} returns this
 */


proto.com.rookout.AgentInformation.prototype.clearLabelsMap = function () {
  this.getLabelsMap().clear();
  return this;
};
/**
 * optional SCMInformation scm = 10;
 * @return {?proto.com.rookout.SCMInformation}
 */


proto.com.rookout.AgentInformation.prototype.getScm = function () {
  return (
    /** @type{?proto.com.rookout.SCMInformation} */
    jspb.Message.getWrapperField(this, proto.com.rookout.SCMInformation, 10)
  );
};
/**
 * @param {?proto.com.rookout.SCMInformation|undefined} value
 * @return {!proto.com.rookout.AgentInformation} returns this
*/


proto.com.rookout.AgentInformation.prototype.setScm = function (value) {
  return jspb.Message.setWrapperField(this, 10, value);
};
/**
 * Clears the message field making it undefined.
 * @return {!proto.com.rookout.AgentInformation} returns this
 */


proto.com.rookout.AgentInformation.prototype.clearScm = function () {
  return this.setScm(undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */


proto.com.rookout.AgentInformation.prototype.hasScm = function () {
  return jspb.Message.getField(this, 10) != null;
};
/**
 * repeated string tags = 11;
 * @return {!Array<string>}
 */


proto.com.rookout.AgentInformation.prototype.getTagsList = function () {
  return (
    /** @type {!Array<string>} */
    jspb.Message.getRepeatedField(this, 11)
  );
};
/**
 * @param {!Array<string>} value
 * @return {!proto.com.rookout.AgentInformation} returns this
 */


proto.com.rookout.AgentInformation.prototype.setTagsList = function (value) {
  return jspb.Message.setField(this, 11, value || []);
};
/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.com.rookout.AgentInformation} returns this
 */


proto.com.rookout.AgentInformation.prototype.addTags = function (value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 11, value, opt_index);
};
/**
 * Clears the list making it empty but non-null.
 * @return {!proto.com.rookout.AgentInformation} returns this
 */


proto.com.rookout.AgentInformation.prototype.clearTagsList = function () {
  return this.setTagsList([]);
};
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */


proto.com.rookout.AgentInformationArray.repeatedFields_ = [1];

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.com.rookout.AgentInformationArray.prototype.toObject = function (opt_includeInstance) {
    return proto.com.rookout.AgentInformationArray.toObject(opt_includeInstance, this);
  };
  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.com.rookout.AgentInformationArray} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */


  proto.com.rookout.AgentInformationArray.toObject = function (includeInstance, msg) {
    var f,
        obj = {
      agentsList: jspb.Message.toObjectList(msg.getAgentsList(), proto.com.rookout.AgentInformation.toObject, includeInstance)
    };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }

    return obj;
  };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.rookout.AgentInformationArray}
 */


proto.com.rookout.AgentInformationArray.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.rookout.AgentInformationArray();
  return proto.com.rookout.AgentInformationArray.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.rookout.AgentInformationArray} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.rookout.AgentInformationArray}
 */


proto.com.rookout.AgentInformationArray.deserializeBinaryFromReader = function (msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }

    var field = reader.getFieldNumber();

    switch (field) {
      case 1:
        var value = new proto.com.rookout.AgentInformation();
        reader.readMessage(value, proto.com.rookout.AgentInformation.deserializeBinaryFromReader);
        msg.addAgents(value);
        break;

      default:
        reader.skipField();
        break;
    }
  }

  return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */


proto.com.rookout.AgentInformationArray.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter();
  proto.com.rookout.AgentInformationArray.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.rookout.AgentInformationArray} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */


proto.com.rookout.AgentInformationArray.serializeBinaryToWriter = function (message, writer) {
  var f = undefined;
  f = message.getAgentsList();

  if (f.length > 0) {
    writer.writeRepeatedMessage(1, f, proto.com.rookout.AgentInformation.serializeBinaryToWriter);
  }
};
/**
 * repeated AgentInformation agents = 1;
 * @return {!Array<!proto.com.rookout.AgentInformation>}
 */


proto.com.rookout.AgentInformationArray.prototype.getAgentsList = function () {
  return (
    /** @type{!Array<!proto.com.rookout.AgentInformation>} */
    jspb.Message.getRepeatedWrapperField(this, proto.com.rookout.AgentInformation, 1)
  );
};
/**
 * @param {!Array<!proto.com.rookout.AgentInformation>} value
 * @return {!proto.com.rookout.AgentInformationArray} returns this
*/


proto.com.rookout.AgentInformationArray.prototype.setAgentsList = function (value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};
/**
 * @param {!proto.com.rookout.AgentInformation=} opt_value
 * @param {number=} opt_index
 * @return {!proto.com.rookout.AgentInformation}
 */


proto.com.rookout.AgentInformationArray.prototype.addAgents = function (opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.com.rookout.AgentInformation, opt_index);
};
/**
 * Clears the list making it empty but non-null.
 * @return {!proto.com.rookout.AgentInformationArray} returns this
 */


proto.com.rookout.AgentInformationArray.prototype.clearAgentsList = function () {
  return this.setAgentsList([]);
};

goog.object.extend(exports, proto.com.rookout);
//# sourceMappingURL=agent_info_pb.js.map