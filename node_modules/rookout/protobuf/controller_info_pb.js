"use strict";

// source: controller_info.proto

/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
var jspb = require('google-protobuf');

var goog = jspb;
var global = Function('return this')();
goog.exportSymbol('proto.com.rookout.ControllerInformation', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */

proto.com.rookout.ControllerInformation = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.com.rookout.ControllerInformation.repeatedFields_, null);
};

goog.inherits(proto.com.rookout.ControllerInformation, jspb.Message);

if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.com.rookout.ControllerInformation.displayName = 'proto.com.rookout.ControllerInformation';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */


proto.com.rookout.ControllerInformation.repeatedFields_ = [4];

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.com.rookout.ControllerInformation.prototype.toObject = function (opt_includeInstance) {
    return proto.com.rookout.ControllerInformation.toObject(opt_includeInstance, this);
  };
  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.com.rookout.ControllerInformation} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */


  proto.com.rookout.ControllerInformation.toObject = function (includeInstance, msg) {
    var f,
        obj = {
      id: jspb.Message.getFieldWithDefault(msg, 1, ""),
      commit: jspb.Message.getFieldWithDefault(msg, 2, ""),
      version: jspb.Message.getFieldWithDefault(msg, 3, ""),
      tagsList: (f = jspb.Message.getRepeatedField(msg, 4)) == null ? undefined : f,
      hostname: jspb.Message.getFieldWithDefault(msg, 5, ""),
      machineType: jspb.Message.getFieldWithDefault(msg, 6, ""),
      network: jspb.Message.getFieldWithDefault(msg, 7, ""),
      ip: jspb.Message.getFieldWithDefault(msg, 8, ""),
      platform: jspb.Message.getFieldWithDefault(msg, 9, ""),
      platformRelease: jspb.Message.getFieldWithDefault(msg, 10, ""),
      platformVersion: jspb.Message.getFieldWithDefault(msg, 11, ""),
      platformString: jspb.Message.getFieldWithDefault(msg, 12, "")
    };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }

    return obj;
  };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.rookout.ControllerInformation}
 */


proto.com.rookout.ControllerInformation.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.rookout.ControllerInformation();
  return proto.com.rookout.ControllerInformation.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.rookout.ControllerInformation} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.rookout.ControllerInformation}
 */


proto.com.rookout.ControllerInformation.deserializeBinaryFromReader = function (msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }

    var field = reader.getFieldNumber();

    switch (field) {
      case 1:
        var value =
        /** @type {string} */
        reader.readString();
        msg.setId(value);
        break;

      case 2:
        var value =
        /** @type {string} */
        reader.readString();
        msg.setCommit(value);
        break;

      case 3:
        var value =
        /** @type {string} */
        reader.readString();
        msg.setVersion(value);
        break;

      case 4:
        var value =
        /** @type {string} */
        reader.readString();
        msg.addTags(value);
        break;

      case 5:
        var value =
        /** @type {string} */
        reader.readString();
        msg.setHostname(value);
        break;

      case 6:
        var value =
        /** @type {string} */
        reader.readString();
        msg.setMachineType(value);
        break;

      case 7:
        var value =
        /** @type {string} */
        reader.readString();
        msg.setNetwork(value);
        break;

      case 8:
        var value =
        /** @type {string} */
        reader.readString();
        msg.setIp(value);
        break;

      case 9:
        var value =
        /** @type {string} */
        reader.readString();
        msg.setPlatform(value);
        break;

      case 10:
        var value =
        /** @type {string} */
        reader.readString();
        msg.setPlatformRelease(value);
        break;

      case 11:
        var value =
        /** @type {string} */
        reader.readString();
        msg.setPlatformVersion(value);
        break;

      case 12:
        var value =
        /** @type {string} */
        reader.readString();
        msg.setPlatformString(value);
        break;

      default:
        reader.skipField();
        break;
    }
  }

  return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */


proto.com.rookout.ControllerInformation.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter();
  proto.com.rookout.ControllerInformation.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.rookout.ControllerInformation} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */


proto.com.rookout.ControllerInformation.serializeBinaryToWriter = function (message, writer) {
  var f = undefined;
  f = message.getId();

  if (f.length > 0) {
    writer.writeString(1, f);
  }

  f = message.getCommit();

  if (f.length > 0) {
    writer.writeString(2, f);
  }

  f = message.getVersion();

  if (f.length > 0) {
    writer.writeString(3, f);
  }

  f = message.getTagsList();

  if (f.length > 0) {
    writer.writeRepeatedString(4, f);
  }

  f = message.getHostname();

  if (f.length > 0) {
    writer.writeString(5, f);
  }

  f = message.getMachineType();

  if (f.length > 0) {
    writer.writeString(6, f);
  }

  f = message.getNetwork();

  if (f.length > 0) {
    writer.writeString(7, f);
  }

  f = message.getIp();

  if (f.length > 0) {
    writer.writeString(8, f);
  }

  f = message.getPlatform();

  if (f.length > 0) {
    writer.writeString(9, f);
  }

  f = message.getPlatformRelease();

  if (f.length > 0) {
    writer.writeString(10, f);
  }

  f = message.getPlatformVersion();

  if (f.length > 0) {
    writer.writeString(11, f);
  }

  f = message.getPlatformString();

  if (f.length > 0) {
    writer.writeString(12, f);
  }
};
/**
 * optional string id = 1;
 * @return {string}
 */


proto.com.rookout.ControllerInformation.prototype.getId = function () {
  return (
    /** @type {string} */
    jspb.Message.getFieldWithDefault(this, 1, "")
  );
};
/**
 * @param {string} value
 * @return {!proto.com.rookout.ControllerInformation} returns this
 */


proto.com.rookout.ControllerInformation.prototype.setId = function (value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};
/**
 * optional string commit = 2;
 * @return {string}
 */


proto.com.rookout.ControllerInformation.prototype.getCommit = function () {
  return (
    /** @type {string} */
    jspb.Message.getFieldWithDefault(this, 2, "")
  );
};
/**
 * @param {string} value
 * @return {!proto.com.rookout.ControllerInformation} returns this
 */


proto.com.rookout.ControllerInformation.prototype.setCommit = function (value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};
/**
 * optional string version = 3;
 * @return {string}
 */


proto.com.rookout.ControllerInformation.prototype.getVersion = function () {
  return (
    /** @type {string} */
    jspb.Message.getFieldWithDefault(this, 3, "")
  );
};
/**
 * @param {string} value
 * @return {!proto.com.rookout.ControllerInformation} returns this
 */


proto.com.rookout.ControllerInformation.prototype.setVersion = function (value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};
/**
 * repeated string tags = 4;
 * @return {!Array<string>}
 */


proto.com.rookout.ControllerInformation.prototype.getTagsList = function () {
  return (
    /** @type {!Array<string>} */
    jspb.Message.getRepeatedField(this, 4)
  );
};
/**
 * @param {!Array<string>} value
 * @return {!proto.com.rookout.ControllerInformation} returns this
 */


proto.com.rookout.ControllerInformation.prototype.setTagsList = function (value) {
  return jspb.Message.setField(this, 4, value || []);
};
/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.com.rookout.ControllerInformation} returns this
 */


proto.com.rookout.ControllerInformation.prototype.addTags = function (value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 4, value, opt_index);
};
/**
 * Clears the list making it empty but non-null.
 * @return {!proto.com.rookout.ControllerInformation} returns this
 */


proto.com.rookout.ControllerInformation.prototype.clearTagsList = function () {
  return this.setTagsList([]);
};
/**
 * optional string hostname = 5;
 * @return {string}
 */


proto.com.rookout.ControllerInformation.prototype.getHostname = function () {
  return (
    /** @type {string} */
    jspb.Message.getFieldWithDefault(this, 5, "")
  );
};
/**
 * @param {string} value
 * @return {!proto.com.rookout.ControllerInformation} returns this
 */


proto.com.rookout.ControllerInformation.prototype.setHostname = function (value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};
/**
 * optional string machine_type = 6;
 * @return {string}
 */


proto.com.rookout.ControllerInformation.prototype.getMachineType = function () {
  return (
    /** @type {string} */
    jspb.Message.getFieldWithDefault(this, 6, "")
  );
};
/**
 * @param {string} value
 * @return {!proto.com.rookout.ControllerInformation} returns this
 */


proto.com.rookout.ControllerInformation.prototype.setMachineType = function (value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};
/**
 * optional string network = 7;
 * @return {string}
 */


proto.com.rookout.ControllerInformation.prototype.getNetwork = function () {
  return (
    /** @type {string} */
    jspb.Message.getFieldWithDefault(this, 7, "")
  );
};
/**
 * @param {string} value
 * @return {!proto.com.rookout.ControllerInformation} returns this
 */


proto.com.rookout.ControllerInformation.prototype.setNetwork = function (value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};
/**
 * optional string ip = 8;
 * @return {string}
 */


proto.com.rookout.ControllerInformation.prototype.getIp = function () {
  return (
    /** @type {string} */
    jspb.Message.getFieldWithDefault(this, 8, "")
  );
};
/**
 * @param {string} value
 * @return {!proto.com.rookout.ControllerInformation} returns this
 */


proto.com.rookout.ControllerInformation.prototype.setIp = function (value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};
/**
 * optional string platform = 9;
 * @return {string}
 */


proto.com.rookout.ControllerInformation.prototype.getPlatform = function () {
  return (
    /** @type {string} */
    jspb.Message.getFieldWithDefault(this, 9, "")
  );
};
/**
 * @param {string} value
 * @return {!proto.com.rookout.ControllerInformation} returns this
 */


proto.com.rookout.ControllerInformation.prototype.setPlatform = function (value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};
/**
 * optional string platform_release = 10;
 * @return {string}
 */


proto.com.rookout.ControllerInformation.prototype.getPlatformRelease = function () {
  return (
    /** @type {string} */
    jspb.Message.getFieldWithDefault(this, 10, "")
  );
};
/**
 * @param {string} value
 * @return {!proto.com.rookout.ControllerInformation} returns this
 */


proto.com.rookout.ControllerInformation.prototype.setPlatformRelease = function (value) {
  return jspb.Message.setProto3StringField(this, 10, value);
};
/**
 * optional string platform_version = 11;
 * @return {string}
 */


proto.com.rookout.ControllerInformation.prototype.getPlatformVersion = function () {
  return (
    /** @type {string} */
    jspb.Message.getFieldWithDefault(this, 11, "")
  );
};
/**
 * @param {string} value
 * @return {!proto.com.rookout.ControllerInformation} returns this
 */


proto.com.rookout.ControllerInformation.prototype.setPlatformVersion = function (value) {
  return jspb.Message.setProto3StringField(this, 11, value);
};
/**
 * optional string platform_string = 12;
 * @return {string}
 */


proto.com.rookout.ControllerInformation.prototype.getPlatformString = function () {
  return (
    /** @type {string} */
    jspb.Message.getFieldWithDefault(this, 12, "")
  );
};
/**
 * @param {string} value
 * @return {!proto.com.rookout.ControllerInformation} returns this
 */


proto.com.rookout.ControllerInformation.prototype.setPlatformString = function (value) {
  return jspb.Message.setProto3StringField(this, 12, value);
};

goog.object.extend(exports, proto.com.rookout);
//# sourceMappingURL=controller_info_pb.js.map